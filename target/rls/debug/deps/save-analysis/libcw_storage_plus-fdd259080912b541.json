{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1","program":"/Users/pkayfire/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","cw_storage_plus","--edition=2018","/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","-C","metadata=fdd259080912b541","-C","extra-filename=-fdd259080912b541","--out-dir","/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps","-L","dependency=/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps","--extern","cosmwasm_std=/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps/libcosmwasm_std-d6b6266da212e988.rmeta","--extern","schemars=/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps/libschemars-1a025b861e525f4c.rmeta","--extern","serde=/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps/libserde-7870af872d9f9d58.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/pkayfire/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps/libcw_storage_plus-fdd259080912b541.rmeta"},"prelude":{"crate_id":{"name":"cw_storage_plus","disambiguator":[1336731219027984008,0]},"crate_root":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src","external_crates":[{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","num":18,"id":{"name":"serde","disambiguator":[17708638508151849415,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","num":19,"id":{"name":"serde_derive","disambiguator":[14647995332264414458,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":20,"id":{"name":"cosmwasm_std","disambiguator":[15457222718874746160,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":21,"id":{"name":"schemars","disambiguator":[14179557541536586630,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":22,"id":{"name":"schemars_derive","disambiguator":[16831254357682522460,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":23,"id":{"name":"serde_json","disambiguator":[1862166777996081867,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":24,"id":{"name":"itoa","disambiguator":[5181687683467936091,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":25,"id":{"name":"ryu","disambiguator":[213915053124533740,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":26,"id":{"name":"dyn_clone","disambiguator":[274589602414854599,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":27,"id":{"name":"cosmwasm_crypto","disambiguator":[13846476669932949706,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":28,"id":{"name":"ed25519_zebra","disambiguator":[4006402121240301452,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":29,"id":{"name":"curve25519_dalek","disambiguator":[4180205231280758052,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":30,"id":{"name":"byteorder","disambiguator":[10503708031744184260,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":31,"id":{"name":"digest","disambiguator":[13392248641622206805,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":32,"id":{"name":"generic_array","disambiguator":[16961372954910198322,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":33,"id":{"name":"typenum","disambiguator":[14088201365392578911,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":34,"id":{"name":"rand_core","disambiguator":[5144361343438494181,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":35,"id":{"name":"getrandom","disambiguator":[1510426937030773120,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":36,"id":{"name":"cfg_if","disambiguator":[10518978035588998298,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":37,"id":{"name":"libc","disambiguator":[17030207778387568577,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":38,"id":{"name":"zeroize","disambiguator":[3482351252064373891,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":39,"id":{"name":"subtle","disambiguator":[10757624989791092535,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":40,"id":{"name":"sha2","disambiguator":[6449462383812243750,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":41,"id":{"name":"block_buffer","disambiguator":[9182225879530407599,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":42,"id":{"name":"opaque_debug","disambiguator":[2944049475489082046,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":43,"id":{"name":"cpufeatures","disambiguator":[864834193419649658,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":44,"id":{"name":"thiserror","disambiguator":[4886948207782880319,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":45,"id":{"name":"thiserror_impl","disambiguator":[2438396279667224800,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":46,"id":{"name":"hex","disambiguator":[9877719161220701246,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":47,"id":{"name":"k256","disambiguator":[1285814370869603051,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":48,"id":{"name":"elliptic_curve","disambiguator":[6301882710929557378,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":49,"id":{"name":"ff","disambiguator":[9872091952357329144,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":50,"id":{"name":"rand_core","disambiguator":[2650215389889784628,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":51,"id":{"name":"getrandom","disambiguator":[8068670600842606721,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":52,"id":{"name":"group","disambiguator":[17539616821181354708,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":53,"id":{"name":"pkcs8","disambiguator":[15941563477077830827,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":54,"id":{"name":"der","disambiguator":[99301483945602500,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":55,"id":{"name":"const_oid","disambiguator":[3290123240809815534,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":56,"id":{"name":"spki","disambiguator":[8760380263498343453,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":57,"id":{"name":"crypto_bigint","disambiguator":[16768623711449288056,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":58,"id":{"name":"ecdsa","disambiguator":[5993853775914812872,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":59,"id":{"name":"hmac","disambiguator":[17143649649459570764,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":60,"id":{"name":"crypto_mac","disambiguator":[1318832172094055950,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":61,"id":{"name":"signature","disambiguator":[12113705361577417028,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":62,"id":{"name":"cosmwasm_derive","disambiguator":[9808388350194834656,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":63,"id":{"name":"uint","disambiguator":[8534855115044549132,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":64,"id":{"name":"static_assertions","disambiguator":[17268501497301403732,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":65,"id":{"name":"crunchy","disambiguator":[15979734922084047031,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":66,"id":{"name":"base64","disambiguator":[15777400130402887194,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/helpers.rs","num":67,"id":{"name":"serde_json_wasm","disambiguator":[5934842020498068409,0]}}],"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":0,"byte_end":827,"line_start":1,"line_end":31,"column_start":1,"column_end":43}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":177,"byte_end":183,"line_start":14,"line_end":14,"column_start":17,"column_end":23},"alias_span":null,"name":"Endian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":236,"byte_end":245,"line_start":16,"line_end":16,"column_start":23,"column_end":32},"alias_span":null,"name":"IndexList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":247,"byte_end":257,"line_start":16,"line_end":16,"column_start":34,"column_end":44},"alias_span":null,"name":"IndexedMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":315,"byte_end":333,"line_start":18,"line_end":18,"column_start":27,"column_end":45},"alias_span":null,"name":"IndexedSnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":274},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":387,"byte_end":399,"line_start":21,"line_end":21,"column_start":5,"column_end":17},"alias_span":null,"name":"index_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":401,"byte_end":419,"line_start":21,"line_end":21,"column_start":19,"column_end":37},"alias_span":null,"name":"index_string_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":421,"byte_end":433,"line_start":21,"line_end":21,"column_start":39,"column_end":51},"alias_span":null,"name":"index_triple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":275},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":435,"byte_end":446,"line_start":21,"line_end":21,"column_start":53,"column_end":64},"alias_span":null,"name":"index_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":278},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":448,"byte_end":453,"line_start":21,"line_end":21,"column_start":66,"column_end":71},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":455,"byte_end":465,"line_start":21,"line_end":21,"column_start":73,"column_end":83},"alias_span":null,"name":"MultiIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":467,"byte_end":478,"line_start":21,"line_end":21,"column_start":85,"column_end":96},"alias_span":null,"name":"UniqueIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":497,"byte_end":501,"line_start":23,"line_end":23,"column_start":15,"column_end":19},"alias_span":null,"name":"Item","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":553},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":518,"byte_end":525,"line_start":24,"line_end":24,"column_start":16,"column_end":23},"alias_span":null,"name":"I128Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":527,"byte_end":533,"line_start":24,"line_end":24,"column_start":25,"column_end":31},"alias_span":null,"name":"I16Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":551},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":535,"byte_end":541,"line_start":24,"line_end":24,"column_start":33,"column_end":39},"alias_span":null,"name":"I32Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":543,"byte_end":549,"line_start":24,"line_end":24,"column_start":41,"column_end":47},"alias_span":null,"name":"I64Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":549},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":551,"byte_end":556,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"alias_span":null,"name":"I8Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":574,"byte_end":582,"line_start":25,"line_end":25,"column_start":16,"column_end":24},"alias_span":null,"name":"Prefixer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":584,"byte_end":594,"line_start":25,"line_end":25,"column_start":26,"column_end":36},"alias_span":null,"name":"PrimaryKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":548},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":596,"byte_end":603,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"U128Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":545},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":605,"byte_end":611,"line_start":25,"line_end":25,"column_start":47,"column_end":53},"alias_span":null,"name":"U16Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":613,"byte_end":619,"line_start":25,"line_end":25,"column_start":55,"column_end":61},"alias_span":null,"name":"U32Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":621,"byte_end":627,"line_start":25,"line_end":25,"column_start":63,"column_end":69},"alias_span":null,"name":"U64Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":544},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":629,"byte_end":634,"line_start":25,"line_end":25,"column_start":71,"column_end":76},"alias_span":null,"name":"U8Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1102},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":650,"byte_end":653,"line_start":26,"line_end":26,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1119},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":669,"byte_end":673,"line_start":27,"line_end":27,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":753},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":721,"byte_end":738,"line_start":29,"line_end":29,"column_start":18,"column_end":35},"alias_span":null,"name":"range_with_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1129},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":740,"byte_end":745,"line_start":29,"line_end":29,"column_start":37,"column_end":42},"alias_span":null,"name":"Bound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1140},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":747,"byte_end":753,"line_start":29,"line_end":29,"column_start":44,"column_end":50},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":813},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":804,"byte_end":815,"line_start":31,"line_end":31,"column_start":20,"column_end":31},"alias_span":null,"name":"SnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1149},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":817,"byte_end":825,"line_start":31,"line_end":31,"column_start":33,"column_end":41},"alias_span":null,"name":"Strategy","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","byte_start":0,"byte_end":827,"line_start":1,"line_end":31,"column_start":1,"column_end":43},"name":"","qualname":"::","value":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":15},{"krate":0,"index":40},{"krate":0,"index":123},{"krate":0,"index":216},{"krate":0,"index":359},{"krate":0,"index":409},{"krate":0,"index":431},{"krate":0,"index":566},{"krate":0,"index":634},{"krate":0,"index":685},{"krate":0,"index":760},{"krate":0,"index":855},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":951}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/endian.rs","byte_start":1289,"byte_end":1295,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"Endian","qualname":"::endian::Endian","value":"Endian: Sized + Copy","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/endian.rs","byte_start":1321,"byte_end":1324,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Buf","qualname":"::endian::Endian::Buf","value":"type Buf: AsRef<[u8]> + AsMut<[u8]> + Into<Vec<u8>> + Default;","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/endian.rs","byte_start":1387,"byte_end":1398,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"to_le_bytes","qualname":"::endian::Endian::to_le_bytes","value":"pub fn to_le_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/endian.rs","byte_start":1426,"byte_end":1437,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"to_be_bytes","qualname":"::endian::Endian::to_be_bytes","value":"pub fn to_be_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/endian.rs","byte_start":1466,"byte_end":1479,"line_start":18,"line_end":18,"column_start":8,"column_end":21},"name":"from_le_bytes","qualname":"::endian::Endian::from_le_bytes","value":"pub fn from_le_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/endian.rs","byte_start":1514,"byte_end":1527,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"from_be_bytes","qualname":"::endian::Endian::from_be_bytes","value":"pub fn from_be_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":83},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":8004,"byte_end":8013,"line_start":14,"line_end":14,"column_start":11,"column_end":20},"name":"IndexList","qualname":"::indexed_map::IndexList","value":"IndexList<T>","parent":null,"children":[{"krate":0,"index":85}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":8026,"byte_end":8037,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"get_indexes","qualname":"::indexed_map::IndexList::get_indexes","value":"pub fn get_indexes(&Self) -> Box<dyn Iterator<Item = &dyn Index<T>>>","parent":{"krate":0,"index":83},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":86},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":8234,"byte_end":8244,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"IndexedMap","qualname":"::indexed_map::IndexedMap","value":"IndexedMap { idx }","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"decl_id":null,"docs":" IndexedBucket works like a bucket but has a secondary index\n TODO: remove traits here and make this const fn new\n","sig":null,"attributes":[{"value":"/ IndexedBucket works like a bucket but has a secondary index","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":8103,"byte_end":8166,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/ TODO: remove traits here and make this const fn new","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":8167,"byte_end":8222,"line_start":19,"line_end":19,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":93},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":8525,"byte_end":8528,"line_start":30,"line_end":30,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_map::IndexedMap::idx","value":"I","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":8415,"byte_end":8483,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":8488,"byte_end":8516,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":8746,"byte_end":8749,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedMap>::new","value":"pub fn new(&'a str, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" TODO: remove traits here and make this const fn new\n","sig":null,"attributes":[{"value":"/ TODO: remove traits here and make this const fn new","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":8679,"byte_end":8734,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":8966,"byte_end":8969,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":9447,"byte_end":9451,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":9176,"byte_end":9262,"line_start":59,"line_end":59,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":9267,"byte_end":9330,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":9335,"byte_end":9435,"line_start":61,"line_end":61,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":9662,"byte_end":9668,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":10115,"byte_end":10122,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":9856,"byte_end":9952,"line_start":72,"line_end":72,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":9957,"byte_end":10044,"line_start":73,"line_end":73,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":10049,"byte_end":10103,"line_start":74,"line_end":74,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":11112,"byte_end":11118,"line_start":104,"line_end":104,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":10834,"byte_end":10904,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":10909,"byte_end":10995,"line_start":101,"line_end":101,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":11000,"byte_end":11003,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":11008,"byte_end":11100,"line_start":103,"line_end":103,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":11753,"byte_end":11757,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":11658,"byte_end":11741,"line_start":119,"line_end":119,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":12013,"byte_end":12021,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":11861,"byte_end":11958,"line_start":124,"line_end":124,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":11963,"byte_end":12001,"line_start":125,"line_end":125,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":12179,"byte_end":12185,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":12331,"byte_end":12341,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":12834,"byte_end":12839,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":170},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":30490,"byte_end":30508,"line_start":14,"line_end":14,"column_start":12,"column_end":30},"name":"IndexedSnapshotMap","qualname":"::indexed_snapshot::IndexedSnapshotMap","value":"IndexedSnapshotMap { idx }","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":" IndexedSnapshotMap works like a SnapshotMap but has a secondary index\n","sig":null,"attributes":[{"value":"/ IndexedSnapshotMap works like a SnapshotMap but has a secondary index","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":30405,"byte_end":30478,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":177},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":30797,"byte_end":30800,"line_start":24,"line_end":24,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_snapshot::IndexedSnapshotMap::idx","value":"I","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":30687,"byte_end":30755,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":30760,"byte_end":30788,"line_start":23,"line_end":23,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":30966,"byte_end":30969,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedSnapshotMap>::new","value":"pub fn new(&'a str, &'a str, &'a str, Strategy, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":31345,"byte_end":31359,"line_start":47,"line_end":47,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<IndexedSnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":31493,"byte_end":31510,"line_start":51,"line_end":51,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<IndexedSnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":31811,"byte_end":31829,"line_start":62,"line_end":62,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<IndexedSnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":32018,"byte_end":32037,"line_start":71,"line_end":71,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<IndexedSnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":32172,"byte_end":32175,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedSnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":32676,"byte_end":32680,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedSnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":32405,"byte_end":32491,"line_start":86,"line_end":86,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":32496,"byte_end":32559,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":32564,"byte_end":32664,"line_start":88,"line_end":88,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":32912,"byte_end":32918,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedSnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":33386,"byte_end":33393,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedSnapshotMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>, u64)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":33127,"byte_end":33223,"line_start":99,"line_end":99,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":33228,"byte_end":33315,"line_start":100,"line_end":100,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":33320,"byte_end":33374,"line_start":101,"line_end":101,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":34421,"byte_end":34427,"line_start":132,"line_end":132,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedSnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":34143,"byte_end":34213,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":34218,"byte_end":34304,"line_start":129,"line_end":129,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":34309,"byte_end":34312,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":34317,"byte_end":34409,"line_start":131,"line_end":131,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":35130,"byte_end":35134,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedSnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":35035,"byte_end":35118,"line_start":153,"line_end":153,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":35390,"byte_end":35398,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedSnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":35238,"byte_end":35335,"line_start":158,"line_end":158,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":35340,"byte_end":35378,"line_start":159,"line_end":159,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":35556,"byte_end":35562,"line_start":165,"line_end":165,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedSnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":35708,"byte_end":35718,"line_start":170,"line_end":170,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedSnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":36234,"byte_end":36239,"line_start":185,"line_end":185,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedSnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":274},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":52389,"byte_end":52401,"line_start":14,"line_end":14,"column_start":8,"column_end":20},"name":"index_string","qualname":"::indexes::index_string","value":"pub fn index_string(&str) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":275},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":52466,"byte_end":52477,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"index_tuple","qualname":"::indexes::index_tuple","value":"pub fn index_tuple(&str, u32) -> (Vec<u8>, U32Key)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":276},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":52576,"byte_end":52588,"line_start":22,"line_end":22,"column_start":8,"column_end":20},"name":"index_triple","qualname":"::indexes::index_triple","value":"pub fn index_triple(&str, u32, Vec<u8>) -> (Vec<u8>, U32Key, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":277},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":52713,"byte_end":52731,"line_start":26,"line_end":26,"column_start":8,"column_end":26},"name":"index_string_tuple","qualname":"::indexes::index_string_tuple","value":"pub fn index_string_tuple(&str, &str) -> (Vec<u8>, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":278},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":52961,"byte_end":52966,"line_start":32,"line_end":32,"column_start":11,"column_end":16},"name":"Index","qualname":"::indexes::Index","value":"Index<T>","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53030,"byte_end":53034,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"save","qualname":"::indexes::Index::save","value":"pub fn save(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53113,"byte_end":53119,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"remove","qualname":"::indexes::Index::remove","value":"pub fn remove(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53891,"byte_end":53901,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"MultiIndex","qualname":"::indexes::MultiIndex","value":"MultiIndex {  }","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"decl_id":null,"docs":" MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".\n Allows many values per index, and references pk.\n The associated primary key value is stored in the main (pk_namespace) map,\n which stores (namespace, pk_namespace, pk) -> value.","sig":null,"attributes":[{"value":"/ MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53198,"byte_end":53272,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ Allows many values per index, and references pk.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53273,"byte_end":53325,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/ The associated primary key value is stored in the main (pk_namespace) map,","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53326,"byte_end":53404,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ which stores (namespace, pk_namespace, pk) -> value.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53405,"byte_end":53461,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53462,"byte_end":53465,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The stored pk_len is used to recover the pk from the index namespace, and perform","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53466,"byte_end":53551,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/ the secondary load of the associated value from the main map.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53552,"byte_end":53617,"line_start":46,"line_end":46,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53618,"byte_end":53621,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The MultiIndex definition must include a field for the pk. That is, the MultiIndex K value","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53622,"byte_end":53716,"line_start":48,"line_end":48,"column_start":1,"column_end":95}},{"value":"/ is always a n-tuple (n >= 2) and its last element must be the pk.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53717,"byte_end":53786,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/ The index function must therefore put the pk as last element, when generating the index.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":53787,"byte_end":53879,"line_start":50,"line_end":50,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":54171,"byte_end":54174,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiIndex>::new","value":"pub fn new(fn(: &T, : Vec<u8>) -> K, &'a str, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":55759,"byte_end":55765,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"prefix","qualname":"<MultiIndex>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":55999,"byte_end":56009,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<MultiIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":56246,"byte_end":56255,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"index_key","qualname":"<MultiIndex>::index_key","value":"pub fn index_key(&Self, K) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":57345,"byte_end":57350,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"range","qualname":"<MultiIndex>::range","value":"pub fn range<'c>(&'c Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 Order) -> Box<dyn Iterator<Item = StdResult<Pair<T>>> + 'c>\nwhere T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":57680,"byte_end":57684,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"keys","qualname":"<MultiIndex>::keys","value":"pub fn keys<'c>(&'c Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":319},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":58318,"byte_end":58329,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"UniqueIndex","qualname":"::indexes::UniqueIndex","value":"UniqueIndex {  }","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"decl_id":null,"docs":" UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}\n Allows one value per index (i.e. unique) and copies pk and data\n","sig":null,"attributes":[{"value":"/ UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":58165,"byte_end":58238,"line_start":208,"line_end":208,"column_start":1,"column_end":74}},{"value":"/ Allows one value per index (i.e. unique) and copies pk and data","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":58239,"byte_end":58306,"line_start":209,"line_end":209,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":58521,"byte_end":58524,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"new","qualname":"<UniqueIndex>::new","value":"pub fn new(fn(: &T) -> K, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":59963,"byte_end":59972,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"index_key","qualname":"<UniqueIndex>::index_key","value":"pub fn index_key(&Self, K) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":60040,"byte_end":60046,"line_start":270,"line_end":270,"column_start":12,"column_end":18},"name":"prefix","qualname":"<UniqueIndex>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":60247,"byte_end":60257,"line_start":276,"line_end":276,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<UniqueIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":60543,"byte_end":60547,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"item","qualname":"<UniqueIndex>::item","value":"pub fn item(&Self, &dyn Storage, K) -> StdResult<Option<Pair<T>>>","parent":null,"children":[],"decl_id":null,"docs":" returns all items that match this secondary index, always by pk Ascending\n","sig":null,"attributes":[{"value":"/ returns all items that match this secondary index, always by pk Ascending","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":60454,"byte_end":60531,"line_start":282,"line_end":282,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":61134,"byte_end":61139,"line_start":301,"line_end":301,"column_start":12,"column_end":17},"name":"range","qualname":"<UniqueIndex>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":61466,"byte_end":61470,"line_start":315,"line_end":315,"column_start":12,"column_end":16},"name":"keys","qualname":"<UniqueIndex>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":62134,"byte_end":62138,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Item","qualname":"::item::Item","value":"Item {  }","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393}],"decl_id":null,"docs":" Item stores one typed item at the given key.\n This is an analog of Singleton.\n It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.\n","sig":null,"attributes":[{"value":"/ Item stores one typed item at the given key.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":61950,"byte_end":61998,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/ This is an analog of Singleton.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":61999,"byte_end":62034,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/ It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":62035,"byte_end":62122,"line_start":11,"line_end":11,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":62448,"byte_end":62451,"line_start":20,"line_end":20,"column_start":18,"column_end":21},"name":"new","qualname":"<Item>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":62738,"byte_end":62746,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Item>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":62898,"byte_end":62902,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"save","qualname":"<Item>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":62801,"byte_end":62886,"line_start":37,"line_end":37,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":63050,"byte_end":63056,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"remove","qualname":"<Item>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":63237,"byte_end":63241,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"load","qualname":"<Item>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":63142,"byte_end":63225,"line_start":47,"line_end":47,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":63535,"byte_end":63543,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Item>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns `Ok(None)` if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns `Ok(None)` if no data there.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":63381,"byte_end":63480,"line_start":53,"line_end":53,"column_start":5,"column_end":104}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":63485,"byte_end":63523,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":63997,"byte_end":64003,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"update","qualname":"<Item>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(T) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":63690,"byte_end":63760,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":63765,"byte_end":63851,"line_start":61,"line_end":61,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":63856,"byte_end":63859,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ It assumes, that data was initialized before, and if it doesn't exist, `Err(StdError::NotFound)`","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":63864,"byte_end":63964,"line_start":63,"line_end":63,"column_start":5,"column_end":105}},{"value":"/ is returned.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":63969,"byte_end":63985,"line_start":64,"line_end":64,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":444},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":78451,"byte_end":78461,"line_start":8,"line_end":8,"column_start":11,"column_end":21},"name":"PrimaryKey","qualname":"::keys::PrimaryKey","value":"PrimaryKey<'a>: Clone","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":446},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":78484,"byte_end":78490,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Prefix","qualname":"::keys::PrimaryKey::Prefix","value":"type Prefix: Prefixer<'a>;","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":447},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":78515,"byte_end":78524,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"SubPrefix","qualname":"::keys::PrimaryKey::SubPrefix","value":"type SubPrefix: Prefixer<'a>;","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":78619,"byte_end":78622,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"key","qualname":"::keys::PrimaryKey::key","value":"pub fn key(&Self) -> Vec<&[u8]>","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" returns a slice of key steps, which can be optionally combined\n","sig":null,"attributes":[{"value":"/ returns a slice of key steps, which can be optionally combined","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":78545,"byte_end":78611,"line_start":12,"line_end":12,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":78653,"byte_end":78663,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"joined_key","qualname":"::keys::PrimaryKey::joined_key","value":"pub fn joined_key(&Self) -> Vec<u8>","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":475},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":80098,"byte_end":80106,"line_start":71,"line_end":71,"column_start":11,"column_end":19},"name":"Prefixer","qualname":"::keys::Prefixer","value":"Prefixer<'a>","parent":null,"children":[{"krate":0,"index":477}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":80221,"byte_end":80227,"line_start":73,"line_end":73,"column_start":8,"column_end":14},"name":"prefix","qualname":"::keys::Prefixer::prefix","value":"pub fn prefix(&Self) -> Vec<&[u8]>","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" returns 0 or more namespaces that should length-prefixed and concatenated for range searches\n","sig":null,"attributes":[{"value":"/ returns 0 or more namespaces that should length-prefixed and concatenated for range searches","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":80117,"byte_end":80213,"line_start":72,"line_end":72,"column_start":5,"column_end":101}}]},{"kind":"Trait","id":{"krate":0,"index":498},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":81212,"byte_end":81223,"line_start":113,"line_end":113,"column_start":11,"column_end":22},"name":"EmptyPrefix","qualname":"::keys::EmptyPrefix","value":"EmptyPrefix","parent":null,"children":[{"krate":0,"index":499}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":81233,"byte_end":81236,"line_start":114,"line_end":114,"column_start":8,"column_end":11},"name":"new","qualname":"::keys::EmptyPrefix::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":544},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":82996,"byte_end":83001,"line_start":202,"line_end":202,"column_start":10,"column_end":15},"name":"U8Key","qualname":"::keys::U8Key","value":"IntKey<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":545},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83025,"byte_end":83031,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"name":"U16Key","qualname":"::keys::U16Key","value":"IntKey<u16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":546},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83056,"byte_end":83062,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"name":"U32Key","qualname":"::keys::U32Key","value":"IntKey<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":547},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83087,"byte_end":83093,"line_start":205,"line_end":205,"column_start":10,"column_end":16},"name":"U64Key","qualname":"::keys::U64Key","value":"IntKey<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":548},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83118,"byte_end":83125,"line_start":206,"line_end":206,"column_start":10,"column_end":17},"name":"U128Key","qualname":"::keys::U128Key","value":"IntKey<u128>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":549},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83152,"byte_end":83157,"line_start":208,"line_end":208,"column_start":10,"column_end":15},"name":"I8Key","qualname":"::keys::I8Key","value":"IntKey<i8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":550},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83181,"byte_end":83187,"line_start":209,"line_end":209,"column_start":10,"column_end":16},"name":"I16Key","qualname":"::keys::I16Key","value":"IntKey<i16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":551},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83212,"byte_end":83218,"line_start":210,"line_end":210,"column_start":10,"column_end":16},"name":"I32Key","qualname":"::keys::I32Key","value":"IntKey<i32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":552},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83243,"byte_end":83249,"line_start":211,"line_end":211,"column_start":10,"column_end":16},"name":"I64Key","qualname":"::keys::I64Key","value":"IntKey<i64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":553},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83274,"byte_end":83281,"line_start":212,"line_end":212,"column_start":10,"column_end":17},"name":"I128Key","qualname":"::keys::I128Key","value":"IntKey<i128>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83631,"byte_end":83637,"line_start":221,"line_end":221,"column_start":12,"column_end":18},"name":"IntKey","qualname":"::keys::IntKey","value":"IntKey { wrapped, data }","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084}],"decl_id":null,"docs":" It will cast one-particular int type into a Key via Vec<u8>, ensuring you don't mix up u32 and u64\n You can use new or the from/into pair to build a key from an int:","sig":null,"attributes":[{"value":"/ It will cast one-particular int type into a Key via Vec<u8>, ensuring you don't mix up u32 and u64","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83299,"byte_end":83401,"line_start":214,"line_end":214,"column_start":1,"column_end":103}},{"value":"/ You can use new or the from/into pair to build a key from an int:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83402,"byte_end":83471,"line_start":215,"line_end":215,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83472,"byte_end":83475,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/   let k = U64Key::new(12345);","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83476,"byte_end":83509,"line_start":217,"line_end":217,"column_start":1,"column_end":34}},{"value":"/   let k = U32Key::from(12345);","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83510,"byte_end":83544,"line_start":218,"line_end":218,"column_start":1,"column_end":35}},{"value":"/   let k: U16Key = 12345.into();","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83545,"byte_end":83580,"line_start":219,"line_end":219,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83659,"byte_end":83666,"line_start":222,"line_end":222,"column_start":9,"column_end":16},"name":"wrapped","qualname":"::keys::IntKey::wrapped","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83685,"byte_end":83689,"line_start":223,"line_end":223,"column_start":9,"column_end":13},"name":"data","qualname":"::keys::IntKey::data","value":"std::marker::PhantomData<T>","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83749,"byte_end":83752,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"new","qualname":"<IntKey<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":88342,"byte_end":88345,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":88613,"byte_end":88616,"line_start":22,"line_end":22,"column_start":18,"column_end":21},"name":"new","qualname":"<Map>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":88904,"byte_end":88907,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"key","qualname":"<Map>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":89029,"byte_end":89035,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Map>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":88989,"byte_end":89017,"line_start":40,"line_end":40,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":89172,"byte_end":89182,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<Map>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":89132,"byte_end":89160,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":89289,"byte_end":89293,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"save","qualname":"<Map>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":89417,"byte_end":89423,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":89604,"byte_end":89608,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"load","qualname":"<Map>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":89509,"byte_end":89592,"line_start":58,"line_end":58,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":89856,"byte_end":89864,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Map>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":89704,"byte_end":89801,"line_start":63,"line_end":63,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":89806,"byte_end":89844,"line_start":64,"line_end":64,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":90095,"byte_end":90098,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"has","qualname":"<Map>::has","value":"pub fn has(&Self, &dyn Storage, K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has returns true or false if any data is at this key, without parsing or interpreting the\n contents.\n","sig":null,"attributes":[{"value":"/ has returns true or false if any data is at this key, without parsing or interpreting the","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":89972,"byte_end":90065,"line_start":69,"line_end":69,"column_start":5,"column_end":98}},{"value":"/ contents.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":90070,"byte_end":90083,"line_start":70,"line_end":70,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":90463,"byte_end":90469,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"update","qualname":"<Map>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":90185,"byte_end":90255,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":90260,"byte_end":90346,"line_start":76,"line_end":76,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":90351,"byte_end":90354,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":90359,"byte_end":90451,"line_start":78,"line_end":78,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":90914,"byte_end":90919,"line_start":96,"line_end":96,"column_start":12,"column_end":17},"name":"range","qualname":"<Map>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":91274,"byte_end":91278,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>\nwhere T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":107859,"byte_end":107863,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":108381,"byte_end":108384,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Path<T>>::new","value":"pub fn new(&[u8], &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":108787,"byte_end":108791,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"save","qualname":"<Path<T>>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":108690,"byte_end":108775,"line_start":45,"line_end":45,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":108940,"byte_end":108946,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"remove","qualname":"<Path<T>>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":109128,"byte_end":109132,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"load","qualname":"<Path<T>>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":109033,"byte_end":109116,"line_start":55,"line_end":55,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":109425,"byte_end":109433,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Path<T>>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":109273,"byte_end":109370,"line_start":61,"line_end":61,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":109375,"byte_end":109413,"line_start":62,"line_end":62,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":109800,"byte_end":109803,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"has","qualname":"<Path<T>>::has","value":"pub fn has(&Self, &dyn Storage) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has returns true or false if any data is at this key, without parsing or interpreting the\n contents. It will returns true for an length-0 byte array (Some(b\"\")), if you somehow manage to set that.\n","sig":null,"attributes":[{"value":"/ has returns true or false if any data is at this key, without parsing or interpreting the","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":109581,"byte_end":109674,"line_start":68,"line_end":68,"column_start":5,"column_end":98}},{"value":"/ contents. It will returns true for an length-0 byte array (Some(b\"\")), if you somehow manage to set that.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":109679,"byte_end":109788,"line_start":69,"line_end":69,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":110178,"byte_end":110184,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"update","qualname":"<Path<T>>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":109900,"byte_end":109970,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":109975,"byte_end":110061,"line_start":75,"line_end":75,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":110066,"byte_end":110069,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":110074,"byte_end":110166,"line_start":77,"line_end":77,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111180,"byte_end":111189,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::prefix::Bound::Inclusive","value":"Bound::Inclusive(Vec<u8>)","parent":{"krate":0,"index":1129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111204,"byte_end":111213,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::prefix::Bound::Exclusive","value":"Bound::Exclusive(Vec<u8>)","parent":{"krate":0,"index":1129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111168,"byte_end":111173,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Bound","qualname":"::prefix::Bound","value":"pub enum Bound { Inclusive(Vec<u8>), Exclusive(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1133}],"decl_id":null,"docs":" Bound is used to defines the two ends of a range, more explicit than Option<u8>\n None means that we don't limit that side of the range at all.\n Include means we use the given bytes as a limit and *include* anything at that exact key\n Exclude means we use the given bytes as a limit and *exclude* anything at that exact key\n","sig":null,"attributes":[{"value":"/ Bound is used to defines the two ends of a range, more explicit than Option<u8>","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":110799,"byte_end":110882,"line_start":13,"line_end":13,"column_start":1,"column_end":84}},{"value":"/ None means that we don't limit that side of the range at all.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":110883,"byte_end":110948,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ Include means we use the given bytes as a limit and *include* anything at that exact key","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":110949,"byte_end":111041,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ Exclude means we use the given bytes as a limit and *exclude* anything at that exact key","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111042,"byte_end":111134,"line_start":16,"line_end":16,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111333,"byte_end":111342,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"inclusive","qualname":"<Bound>::inclusive","value":"pub fn inclusive<T: Into<Vec<u8>>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns optional binary, like Option<CanonicalAddr> into an inclusive bound\n","sig":null,"attributes":[{"value":"/ Turns optional binary, like Option<CanonicalAddr> into an inclusive bound","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111244,"byte_end":111321,"line_start":24,"line_end":24,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111520,"byte_end":111529,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<Bound>::exclusive","value":"pub fn exclusive<T: Into<Vec<u8>>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns optional binary, like Option<CanonicalAddr> into an exclusive bound\n","sig":null,"attributes":[{"value":"/ Turns optional binary, like Option<CanonicalAddr> into an exclusive bound","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111431,"byte_end":111508,"line_start":29,"line_end":29,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111688,"byte_end":111701,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"inclusive_int","qualname":"<Bound>::inclusive_int","value":"pub fn inclusive_int<T: Endian>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns an int, like Option<u32> into an inclusive bound\n","sig":null,"attributes":[{"value":"/ Turns an int, like Option<u32> into an inclusive bound","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111618,"byte_end":111676,"line_start":34,"line_end":34,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111867,"byte_end":111880,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"exclusive_int","qualname":"<Bound>::exclusive_int","value":"pub fn exclusive_int<T: Endian>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns an int, like Option<u64> into an exclusive bound\n","sig":null,"attributes":[{"value":"/ Turns an int, like Option<u64> into an exclusive bound","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111797,"byte_end":111855,"line_start":39,"line_end":39,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":112080,"byte_end":112086,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"Prefix","qualname":"::prefix::Prefix","value":"Prefix {  }","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":112665,"byte_end":112668,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Prefix<T>>::new","value":"pub fn new(&[u8], &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":112862,"byte_end":112891,"line_start":81,"line_end":81,"column_start":12,"column_end":41},"name":"with_deserialization_function","qualname":"<Prefix<T>>::with_deserialization_function","value":"pub fn with_deserialization_function(&[u8], &[&[u8]], &[u8], DeserializeFn<T>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":113348,"byte_end":113353,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"range","qualname":"<Prefix<T>>::range","value":"pub fn range<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<Pair<T>>> + 'a> where T: 'a","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":113837,"byte_end":113841,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"keys","qualname":"<Prefix<T>>::keys","value":"pub fn keys<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":753},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":114177,"byte_end":114194,"line_start":127,"line_end":127,"column_start":8,"column_end":25},"name":"range_with_prefix","qualname":"::prefix::range_with_prefix","value":"pub fn range_with_prefix<'a>(&'a dyn Storage, &[u8], Option<Bound>,\n                             Option<Bound>, Order)\n-> Box<dyn Iterator<Item = Pair> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":813},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":121581,"byte_end":121592,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"SnapshotMap","qualname":"::snapshot::SnapshotMap","value":"SnapshotMap {  }","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820}],"decl_id":null,"docs":" Map that maintains a snapshots of one or more checkpoints.\n We can query historical data as well as current state.\n What data is snapshotted depends on the Strategy.\n","sig":null,"attributes":[{"value":"/ Map that maintains a snapshots of one or more checkpoints.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":121394,"byte_end":121456,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ We can query historical data as well as current state.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":121457,"byte_end":121515,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/ What data is snapshotted depends on the Strategy.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":121516,"byte_end":121569,"line_start":17,"line_end":17,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122100,"byte_end":122110,"line_start":34,"line_end":34,"column_start":5,"column_end":15},"name":"EveryBlock","qualname":"::snapshot::Strategy::EveryBlock","value":"Strategy::EveryBlock","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1152},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122116,"byte_end":122121,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Never","qualname":"::snapshot::Strategy::Never","value":"Strategy::Never","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122460,"byte_end":122468,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"name":"Selected","qualname":"::snapshot::Strategy::Selected","value":"Strategy::Selected","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Only writes for linked blocks - does a few more reads to save some writes.\n Probably uses more gas, but less total disk usage.","sig":null,"attributes":[{"value":"/ Only writes for linked blocks - does a few more reads to save some writes.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122127,"byte_end":122205,"line_start":36,"line_end":36,"column_start":5,"column_end":83}},{"value":"/ Probably uses more gas, but less total disk usage.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122210,"byte_end":122264,"line_start":37,"line_end":37,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122269,"byte_end":122272,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Note that you need a trusted source (eg. own contract) to set/remove checkpoints.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122277,"byte_end":122362,"line_start":39,"line_end":39,"column_start":5,"column_end":90}},{"value":"/ Useful when the checkpoint setting happens in the same contract as the snapshotting.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122367,"byte_end":122455,"line_start":40,"line_end":40,"column_start":5,"column_end":93}}]},{"kind":"Enum","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122085,"byte_end":122093,"line_start":33,"line_end":33,"column_start":10,"column_end":18},"name":"Strategy","qualname":"::snapshot::Strategy","value":"pub enum Strategy { EveryBlock, Never, Selected, }","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122610,"byte_end":122613,"line_start":46,"line_end":46,"column_start":18,"column_end":21},"name":"new","qualname":"<SnapshotMap>::new","value":"pub const fn new(&'a str, &'a str, &'a str, Strategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Usage: SnapshotMap::new(snapshot_names!(\"foobar\"), Strategy::EveryBlock)\n","sig":null,"attributes":[{"value":"/ Usage: SnapshotMap::new(snapshot_names!(\"foobar\"), Strategy::EveryBlock)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122516,"byte_end":122592,"line_start":45,"line_end":45,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122937,"byte_end":122951,"line_start":60,"line_end":60,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<SnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":123208,"byte_end":123225,"line_start":68,"line_end":68,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<SnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":123766,"byte_end":123769,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"key","qualname":"<SnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":123842,"byte_end":123848,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"prefix","qualname":"<SnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":123934,"byte_end":123944,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<SnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":126030,"byte_end":126034,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"save","qualname":"<SnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":126291,"byte_end":126297,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"remove","qualname":"<SnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":126644,"byte_end":126648,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"load","qualname":"<SnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":126549,"byte_end":126632,"line_start":165,"line_end":165,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":126900,"byte_end":126908,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"may_load","qualname":"<SnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":126748,"byte_end":126845,"line_start":170,"line_end":170,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":126850,"byte_end":126888,"line_start":171,"line_end":171,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":127359,"byte_end":127377,"line_start":181,"line_end":181,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<SnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":128244,"byte_end":128263,"line_start":208,"line_end":208,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<SnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":129073,"byte_end":129079,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"update","qualname":"<SnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":128679,"byte_end":128749,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":128754,"byte_end":128840,"line_start":221,"line_end":221,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":128845,"byte_end":128848,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":128853,"byte_end":128945,"line_start":223,"line_end":223,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":128950,"byte_end":128953,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This is a bit more customized than needed to only read \"old\" value 1 time, not 2 per naive approach","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":128958,"byte_end":129061,"line_start":225,"line_end":225,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":129876,"byte_end":129881,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"range","qualname":"<SnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":10,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":8554,"byte_end":8564,"line_start":33,"line_end":33,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":9051,"byte_end":9061,"line_start":53,"line_end":53,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":12525,"byte_end":12535,"line_start":142,"line_end":142,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":30826,"byte_end":30844,"line_start":27,"line_end":27,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":31656,"byte_end":31674,"line_start":56,"line_end":56,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":32257,"byte_end":32275,"line_start":80,"line_end":80,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":35902,"byte_end":35920,"line_start":176,"line_end":176,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":54052,"byte_end":54062,"line_start":58,"line_end":58,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":55129,"byte_end":55139,"line_start":101,"line_end":101,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":55651,"byte_end":55661,"line_start":118,"line_end":118,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":57060,"byte_end":57070,"line_start":167,"line_end":167,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":58452,"byte_end":58463,"line_start":216,"line_end":216,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":58775,"byte_end":58786,"line_start":227,"line_end":227,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":59854,"byte_end":59865,"line_start":261,"line_end":261,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":60848,"byte_end":60859,"line_start":293,"line_end":293,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":62417,"byte_end":62421,"line_start":19,"line_end":19,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":62615,"byte_end":62619,"line_start":28,"line_end":28,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":81324,"byte_end":81327,"line_start":121,"line_end":121,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":81471,"byte_end":81474,"line_start":130,"line_end":130,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":81575,"byte_end":81581,"line_start":136,"line_end":136,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":81731,"byte_end":81737,"line_start":145,"line_end":145,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":82275,"byte_end":82279,"line_start":169,"line_end":169,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":82483,"byte_end":82487,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":82674,"byte_end":82680,"line_start":186,"line_end":186,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":82899,"byte_end":82905,"line_start":196,"line_end":196,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83726,"byte_end":83732,"line_start":226,"line_end":226,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83913,"byte_end":83919,"line_start":235,"line_end":235,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":84023,"byte_end":84029,"line_start":241,"line_end":241,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":84240,"byte_end":84243,"line_start":251,"line_end":251,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":88580,"byte_end":88583,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":88811,"byte_end":88814,"line_start":31,"line_end":31,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":90790,"byte_end":90793,"line_start":90,"line_end":90,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":108165,"byte_end":108169,"line_start":20,"line_end":20,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":108317,"byte_end":108321,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111232,"byte_end":111237,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":112442,"byte_end":112448,"line_start":60,"line_end":60,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":112599,"byte_end":112605,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122488,"byte_end":122499,"line_start":44,"line_end":44,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":123642,"byte_end":123653,"line_start":82,"line_end":82,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":845},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":129575,"byte_end":129586,"line_start":246,"line_end":246,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/endian.rs","byte_start":1297,"byte_end":1302,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":7}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/endian.rs","byte_start":1305,"byte_end":1309,"line_start":12,"line_end":12,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3026},"to":{"krate":0,"index":7}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":8554,"byte_end":8564,"line_start":33,"line_end":33,"column_start":19,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":9051,"byte_end":9061,"line_start":53,"line_end":53,"column_start":19,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_map.rs","byte_start":12525,"byte_end":12535,"line_start":142,"line_end":142,"column_start":19,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":30826,"byte_end":30844,"line_start":27,"line_end":27,"column_start":19,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":31656,"byte_end":31674,"line_start":56,"line_end":56,"column_start":19,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":32257,"byte_end":32275,"line_start":80,"line_end":80,"column_start":19,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexed_snapshot.rs","byte_start":35902,"byte_end":35920,"line_start":176,"line_end":176,"column_start":19,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":54052,"byte_end":54062,"line_start":58,"line_end":58,"column_start":16,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":55129,"byte_end":55139,"line_start":101,"line_end":101,"column_start":29,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":282},"to":{"krate":0,"index":278}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":55651,"byte_end":55661,"line_start":118,"line_end":118,"column_start":16,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":57060,"byte_end":57070,"line_start":167,"line_end":167,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":58452,"byte_end":58463,"line_start":216,"line_end":216,"column_start":16,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":58775,"byte_end":58786,"line_start":227,"line_end":227,"column_start":29,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":319},"to":{"krate":0,"index":278}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":59854,"byte_end":59865,"line_start":261,"line_end":261,"column_start":16,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/indexes.rs","byte_start":60848,"byte_end":60859,"line_start":293,"line_end":293,"column_start":16,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":62417,"byte_end":62421,"line_start":19,"line_end":19,"column_start":13,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/item.rs","byte_start":62615,"byte_end":62619,"line_start":28,"line_end":28,"column_start":13,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":78467,"byte_end":78472,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2637},"to":{"krate":0,"index":444}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":81324,"byte_end":81327,"line_start":121,"line_end":121,"column_start":29,"column_end":32},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":444}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":81471,"byte_end":81474,"line_start":130,"line_end":130,"column_start":27,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":81575,"byte_end":81581,"line_start":136,"line_end":136,"column_start":29,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":444}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":81731,"byte_end":81737,"line_start":145,"line_end":145,"column_start":27,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":82275,"byte_end":82279,"line_start":169,"line_end":169,"column_start":29,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":20,"index":2594},"to":{"krate":0,"index":444}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":82483,"byte_end":82487,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":20,"index":2594},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":82674,"byte_end":82680,"line_start":186,"line_end":186,"column_start":48,"column_end":54},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1081},"to":{"krate":0,"index":444}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":82899,"byte_end":82905,"line_start":196,"line_end":196,"column_start":38,"column_end":44},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1081},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83726,"byte_end":83732,"line_start":226,"line_end":226,"column_start":17,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":83913,"byte_end":83919,"line_start":235,"line_end":235,"column_start":29,"column_end":35},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1081},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":84023,"byte_end":84029,"line_start":241,"line_end":241,"column_start":35,"column_end":41},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1081},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/keys.rs","byte_start":84240,"byte_end":84243,"line_start":251,"line_end":251,"column_start":37,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":7063},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":88580,"byte_end":88583,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":88811,"byte_end":88814,"line_start":31,"line_end":31,"column_start":16,"column_end":19},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/map.rs","byte_start":90790,"byte_end":90793,"line_start":90,"line_end":90,"column_start":16,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":108165,"byte_end":108169,"line_start":20,"line_end":20,"column_start":19,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1119},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/path.rs","byte_start":108317,"byte_end":108321,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":111232,"byte_end":111237,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":112442,"byte_end":112448,"line_start":60,"line_end":60,"column_start":19,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1140},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/prefix.rs","byte_start":112599,"byte_end":112605,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":122488,"byte_end":122499,"line_start":44,"line_end":44,"column_start":16,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":123642,"byte_end":123653,"line_start":82,"line_end":82,"column_start":16,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.8.1/src/snapshot.rs","byte_start":129575,"byte_end":129586,"line_start":246,"line_end":246,"column_start":16,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}}]}