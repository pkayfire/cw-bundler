{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3","program":"/Users/pkayfire/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ecdsa","--edition=2018","/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"arithmetic\"","--cfg","feature=\"der\"","--cfg","feature=\"digest\"","--cfg","feature=\"hazmat\"","--cfg","feature=\"hmac\"","--cfg","feature=\"sign\"","--cfg","feature=\"std\"","--cfg","feature=\"verify\"","--cfg","feature=\"zeroize\"","-C","metadata=401bb7f0de8b0a55","-C","extra-filename=-401bb7f0de8b0a55","--out-dir","/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps","-L","dependency=/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps","--extern","der=/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps/libder-543c2e29115d22a8.rmeta","--extern","elliptic_curve=/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps/libelliptic_curve-1215563b7e94c835.rmeta","--extern","hmac=/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps/libhmac-adb1c4d62899eac8.rmeta","--extern","signature=/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps/libsignature-86a9396e4842f0d0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/pkayfire/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps/libecdsa-401bb7f0de8b0a55.rmeta"},"prelude":{"crate_id":{"name":"ecdsa","disambiguator":[5993853775914812872,0]},"crate_root":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src","external_crates":[{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":5,"id":{"name":"der","disambiguator":[99301483945602500,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":6,"id":{"name":"const_oid","disambiguator":[3290123240809815534,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":7,"id":{"name":"elliptic_curve","disambiguator":[6301882710929557378,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":8,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":9,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":10,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":11,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":15,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":16,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":17,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":18,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":19,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":21,"id":{"name":"subtle","disambiguator":[10757624989791092535,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":22,"id":{"name":"generic_array","disambiguator":[16961372954910198322,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":23,"id":{"name":"typenum","disambiguator":[14088201365392578911,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":24,"id":{"name":"zeroize","disambiguator":[3482351252064373891,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":25,"id":{"name":"ff","disambiguator":[9872091952357329144,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":26,"id":{"name":"rand_core","disambiguator":[2650215389889784628,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":27,"id":{"name":"getrandom","disambiguator":[8068670600842606721,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":28,"id":{"name":"cfg_if","disambiguator":[10518978035588998298,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":29,"id":{"name":"libc","disambiguator":[17030207778387568577,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":30,"id":{"name":"group","disambiguator":[17539616821181354708,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":31,"id":{"name":"pkcs8","disambiguator":[15941563477077830827,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":32,"id":{"name":"spki","disambiguator":[8760380263498343453,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","num":33,"id":{"name":"crypto_bigint","disambiguator":[16768623711449288056,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","num":34,"id":{"name":"hmac","disambiguator":[17143649649459570764,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","num":35,"id":{"name":"crypto_mac","disambiguator":[1318832172094055950,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","num":36,"id":{"name":"digest","disambiguator":[13392248641622206805,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","num":37,"id":{"name":"signature","disambiguator":[12113705361577417028,0]}}],"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":0,"byte_end":9463,"line_start":1,"line_end":300,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":7,"index":0},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":2825,"byte_end":2839,"line_start":81,"line_end":81,"column_start":9,"column_end":23},"alias_span":null,"name":"elliptic_curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":866},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":2854,"byte_end":2866,"line_start":81,"line_end":81,"column_start":38,"column_end":50},"alias_span":null,"name":"EncodedPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":200},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":2881,"byte_end":2886,"line_start":81,"line_end":81,"column_start":65,"column_end":70},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":37,"index":0},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":2952,"byte_end":2961,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"alias_span":null,"name":"signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":37,"index":130},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":2970,"byte_end":2975,"line_start":84,"line_end":84,"column_start":27,"column_end":32},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":37,"index":25},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":2977,"byte_end":2983,"line_start":84,"line_end":84,"column_start":34,"column_end":40},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":3074,"byte_end":3084,"line_start":88,"line_end":88,"column_start":15,"column_end":25},"alias_span":null,"name":"SigningKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":3180,"byte_end":3192,"line_start":92,"line_end":92,"column_start":17,"column_end":29},"alias_span":null,"name":"VerifyingKey","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":0,"byte_end":9463,"line_start":1,"line_end":300,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":103},{"krate":0,"index":173},{"krate":0,"index":246},{"krate":0,"index":401},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":620},{"krate":0,"index":627},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":651}],"decl_id":null,"docs":" Elliptic Curve Digital Signature Algorithm (ECDSA) as specified in\n [FIPS 186-4] (Digital Signature Standard)","sig":null,"attributes":[{"value":"/ Elliptic Curve Digital Signature Algorithm (ECDSA) as specified in","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":0,"byte_end":70,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/ [FIPS 186-4] (Digital Signature Standard)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":71,"byte_end":116,"line_start":2,"line_end":2,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":117,"byte_end":120,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ## About","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":121,"byte_end":133,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":134,"byte_end":137,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This crate provides generic ECDSA support which can be used in the","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":138,"byte_end":208,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ following ways:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":209,"byte_end":228,"line_start":7,"line_end":7,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":229,"byte_end":232,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - Generic implementation of ECDSA usable with the following crates:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":233,"byte_end":304,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/   - [`k256`] (secp256k1)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":305,"byte_end":333,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/   - [`p256`] (NIST P-256)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":334,"byte_end":363,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/ - ECDSA signature types alone which can be used to provide interoperability","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":364,"byte_end":443,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   between other crates that provide an ECDSA implementation:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":444,"byte_end":508,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/   - [`p384`] (NIST P-384)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":509,"byte_end":538,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":539,"byte_end":542,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Any crates which provide an implementation of ECDSA for a particular","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":543,"byte_end":615,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ elliptic curve can leverage the types from this crate, along with the","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":616,"byte_end":689,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ [`k256`], [`p256`], and/or [`p384`] crates to expose ECDSA functionality in","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":690,"byte_end":769,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ a generic, interoperable way by leveraging the [`Signature`] type with in","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":770,"byte_end":847,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ conjunction with the [`signature::Signer`] and [`signature::Verifier`]","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":848,"byte_end":922,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ traits.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":923,"byte_end":934,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":935,"byte_end":938,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For example, the [`ring-compat`] crate implements the [`signature::Signer`]","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":939,"byte_end":1018,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ and [`signature::Verifier`] traits in conjunction with the","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1019,"byte_end":1081,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/ [`p256::ecdsa::Signature`] and [`p384::ecdsa::Signature`] types to","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1082,"byte_end":1152,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ wrap the ECDSA implementations from [*ring*] in a generic, interoperable","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1153,"byte_end":1229,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ API.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1230,"byte_end":1238,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1239,"byte_end":1242,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Minimum Supported Rust Version","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1243,"byte_end":1280,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1281,"byte_end":1284,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Rust **1.51** or higher.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1285,"byte_end":1313,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1314,"byte_end":1317,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Minimum supported Rust version may be changed in the future, but it will be","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1318,"byte_end":1397,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ accompanied with a minor version bump.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1398,"byte_end":1440,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1441,"byte_end":1444,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [FIPS 186-4]: https://csrc.nist.gov/publications/detail/fips/186/4/final","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1445,"byte_end":1521,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ [`k256`]: https://docs.rs/k256","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1522,"byte_end":1556,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ [`p256`]: https://docs.rs/p256","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1557,"byte_end":1591,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/ [`p256::ecdsa::Signature`]: https://docs.rs/p256/latest/p256/ecdsa/type.Signature.html","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1592,"byte_end":1682,"line_start":39,"line_end":39,"column_start":1,"column_end":91}},{"value":"/ [`p384`]: https://docs.rs/p384","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1683,"byte_end":1717,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/ [`p384::ecdsa::Signature`]: https://docs.rs/p384/latest/p384/ecdsa/type.Signature.html","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1718,"byte_end":1808,"line_start":41,"line_end":41,"column_start":1,"column_end":91}},{"value":"/ [`ring-compat`]: https://docs.rs/ring-compat","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1809,"byte_end":1857,"line_start":42,"line_end":42,"column_start":1,"column_end":49}},{"value":"/ [*ring*]: https://docs.rs/ring","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1858,"byte_end":1892,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"no_std","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1894,"byte_end":1904,"line_start":45,"line_end":45,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code, clippy :: unwrap_used)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1944,"byte_end":1988,"line_start":47,"line_end":47,"column_start":1,"column_end":45}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":1989,"byte_end":2029,"line_start":48,"line_end":48,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"der","qualname":"::der","value":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":95},{"krate":0,"index":99},{"krate":0,"index":100}],"decl_id":null,"docs":" Support for ECDSA signatures encoded as ASN.1 DER.\n","sig":null,"attributes":[{"value":"cfg(feature = \"der\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":2327,"byte_end":2350,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ Support for ECDSA signatures encoded as ASN.1 DER.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":9465,"byte_end":9519,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":61},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10341,"byte_end":10352,"line_start":35,"line_end":35,"column_start":10,"column_end":21},"name":"MaxOverhead","qualname":"::der::MaxOverhead","value":"U9","parent":null,"children":[],"decl_id":null,"docs":" Maximum overhead of an ASN.1 DER-encoded ECDSA signature for a given curve:\n 9-bytes.","sig":null,"attributes":[{"value":"/ Maximum overhead of an ASN.1 DER-encoded ECDSA signature for a given curve:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":9874,"byte_end":9953,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ 9-bytes.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":9954,"byte_end":9966,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":9967,"byte_end":9970,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Includes 3-byte ASN.1 DER header:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":9971,"byte_end":10008,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10009,"byte_end":10012,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - 1-byte: ASN.1 `SEQUENCE` tag (0x30)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10013,"byte_end":10054,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/ - 2-byte: length","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10055,"byte_end":10075,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10076,"byte_end":10079,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ...followed by two ASN.1 `INTEGER` values, which each have a header whose","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10080,"byte_end":10157,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ maximum length is the following:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10158,"byte_end":10194,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10195,"byte_end":10198,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ - 1-byte: ASN.1 `INTEGER` tag (0x02)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10199,"byte_end":10239,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/ - 1-byte: length","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10240,"byte_end":10260,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/ - 1-byte: zero to indicate value is positive (`INTEGER` is signed)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10261,"byte_end":10331,"line_start":34,"line_end":34,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":62},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10450,"byte_end":10457,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"name":"MaxSize","qualname":"::der::MaxSize","value":"<<FieldSize<C> as Add>::Output as Add<MaxOverhead>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Maximum size of an ASN.1 DER encoded signature for the given elliptic curve.\n","sig":null,"attributes":[{"value":"/ Maximum size of an ASN.1 DER encoded signature for the given elliptic curve.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10360,"byte_end":10440,"line_start":37,"line_end":37,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10740,"byte_end":10749,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"Signature","qualname":"::der::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" ASN.1 DER-encoded signature.","sig":null,"attributes":[{"value":"/ ASN.1 DER-encoded signature.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10636,"byte_end":10668,"line_start":43,"line_end":43,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10669,"byte_end":10672,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Generic over the scalar size of the elliptic curve.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":10673,"byte_end":10728,"line_start":45,"line_end":45,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":11684,"byte_end":11687,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"len","qualname":"<Signature<C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the signature in bytes\n","sig":null,"attributes":[{"value":"/ Get the length of the signature in bytes","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":11628,"byte_end":11672,"line_start":81,"line_end":81,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":11795,"byte_end":11803,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Signature<C>>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this signature as a byte slice\n","sig":null,"attributes":[{"value":"/ Borrow this signature as a byte slice","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":11742,"byte_end":11783,"line_start":86,"line_end":86,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":11970,"byte_end":11978,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Signature<C>>::to_bytes","value":"pub fn to_bytes(&Self) -> Box<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this signature as a boxed byte slice\n","sig":null,"attributes":[{"value":"/ Serialize this signature as a boxed byte slice","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":11878,"byte_end":11928,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":11933,"byte_end":11958,"line_start":92,"line_end":92,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":103},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hazmat","qualname":"::hazmat","value":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":170}],"decl_id":null,"docs":" Low-level ECDSA primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"hazmat\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":2497,"byte_end":2523,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/ Low-level ECDSA primitives.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":18426,"byte_end":18457,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":18458,"byte_end":18461,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # ⚠️ Warning: Hazmat!","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":18462,"byte_end":18491,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":18492,"byte_end":18495,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ YOU PROBABLY DON'T WANT TO USE THESE!","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":18496,"byte_end":18537,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":18538,"byte_end":18541,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ These primitives are easy-to-misuse low-level interfaces intended to be","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":18542,"byte_end":18617,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ implemented by elliptic curve crates and consumed only by this crate!","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":18618,"byte_end":18691,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":18692,"byte_end":18695,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If you are an end user / non-expert in cryptography, do not use these!","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":18696,"byte_end":18770,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ Failure to use them correctly can lead to catastrophic failures including","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":18771,"byte_end":18848,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ FULL PRIVATE KEY RECOVERY!","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":18849,"byte_end":18879,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":147},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":19690,"byte_end":19703,"line_start":40,"line_end":40,"column_start":11,"column_end":24},"name":"SignPrimitive","qualname":"::hazmat::SignPrimitive","value":"SignPrimitive<C>","parent":null,"children":[{"krate":0,"index":149}],"decl_id":null,"docs":" Try to sign the given prehashed message using ECDSA.","sig":null,"attributes":[{"value":"/ Try to sign the given prehashed message using ECDSA.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":19333,"byte_end":19389,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":19390,"byte_end":19393,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be implemented on a type with access","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":19394,"byte_end":19460,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/ to the secret scalar via `&self`, such as particular curve's `Scalar` type,","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":19461,"byte_end":19540,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ or potentially a key handle to a hardware device.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":19541,"byte_end":19594,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":19595,"byte_end":19625,"line_start":38,"line_end":38,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":20131,"byte_end":20149,"line_start":52,"line_end":52,"column_start":8,"column_end":26},"name":"try_sign_prehashed","qualname":"::hazmat::SignPrimitive::try_sign_prehashed","value":"pub fn try_sign_prehashed<K: Borrow<Scalar<C>> + Invert<Output =\n                          Scalar<C>>>(&Self, &K, &Scalar<C>)\n-> Result<Signature<C>>","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Try to sign the prehashed message.","sig":null,"attributes":[{"value":"/ Try to sign the prehashed message.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":19795,"byte_end":19833,"line_start":45,"line_end":45,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":19838,"byte_end":19841,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Accepts the following arguments:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":19846,"byte_end":19882,"line_start":47,"line_end":47,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":19887,"byte_end":19890,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ - `ephemeral_scalar`: ECDSA `k` value. MUST BE UNIFORMLY RANDOM!!!","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":19895,"byte_end":19965,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ - `hashed_msg`: scalar computed from a hashed message digest to be signed.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":19970,"byte_end":20048,"line_start":50,"line_end":50,"column_start":5,"column_end":83}},{"value":"/   MUST BE OUTPUT OF A CRYPTOGRAPHICALLY SECURE DIGEST ALGORITHM!!!","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":20053,"byte_end":20123,"line_start":51,"line_end":51,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":151},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":20517,"byte_end":20541,"line_start":63,"line_end":63,"column_start":11,"column_end":35},"name":"RecoverableSignPrimitive","qualname":"::hazmat::RecoverableSignPrimitive","value":"RecoverableSignPrimitive<C>","parent":null,"children":[{"krate":0,"index":153}],"decl_id":null,"docs":" [`SignPrimitive`] for signature implementations that can provide public key\n recovery implementation.\n","sig":null,"attributes":[{"value":"/ [`SignPrimitive`] for signature implementations that can provide public key","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":20313,"byte_end":20392,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ recovery implementation.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":20393,"byte_end":20421,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":20422,"byte_end":20452,"line_start":61,"line_end":61,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":20965,"byte_end":20995,"line_start":74,"line_end":74,"column_start":8,"column_end":38},"name":"try_sign_recoverable_prehashed","qualname":"::hazmat::RecoverableSignPrimitive::try_sign_recoverable_prehashed","value":"pub fn try_sign_recoverable_prehashed<K: Borrow<Scalar<C>> + Invert<Output =\n                                      Scalar<C>>>(&Self, &K, &Scalar<C>)\n-> Result<(Signature<C>, bool)>","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":" Try to sign the prehashed message.","sig":null,"attributes":[{"value":"/ Try to sign the prehashed message.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":20633,"byte_end":20671,"line_start":68,"line_end":68,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":20676,"byte_end":20679,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Accepts the same arguments as [`SignPrimitive::try_sign_prehashed`]","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":20684,"byte_end":20755,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ but returns a boolean flag which indicates whether or not the","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":20760,"byte_end":20825,"line_start":71,"line_end":71,"column_start":5,"column_end":70}},{"value":"/ y-coordinate of the computed 𝐑 = 𝑘×𝑮 point is odd, which can be","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":20830,"byte_end":20907,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/ incorporated into recoverable signatures.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":20912,"byte_end":20957,"line_start":73,"line_end":73,"column_start":5,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":161},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":21987,"byte_end":22002,"line_start":105,"line_end":105,"column_start":11,"column_end":26},"name":"VerifyPrimitive","qualname":"::hazmat::VerifyPrimitive","value":"VerifyPrimitive<C>","parent":null,"children":[{"krate":0,"index":163}],"decl_id":null,"docs":" Verify the given prehashed message using ECDSA.","sig":null,"attributes":[{"value":"/ Verify the given prehashed message using ECDSA.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":21652,"byte_end":21703,"line_start":98,"line_end":98,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":21704,"byte_end":21707,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be implemented on type which can access","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":21708,"byte_end":21777,"line_start":100,"line_end":100,"column_start":1,"column_end":70}},{"value":"/ the affine point represeting the public key via `&self`, such as a","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":21778,"byte_end":21848,"line_start":101,"line_end":101,"column_start":1,"column_end":71}},{"value":"/ particular curve's `AffinePoint` type.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":21849,"byte_end":21891,"line_start":102,"line_end":102,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":21892,"byte_end":21922,"line_start":103,"line_end":103,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22355,"byte_end":22371,"line_start":116,"line_end":116,"column_start":8,"column_end":24},"name":"verify_prehashed","qualname":"::hazmat::VerifyPrimitive::verify_prehashed","value":"pub fn verify_prehashed(&Self, &Scalar<C>, &Signature<C>) -> Result<()>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":" Verify the prehashed message against the provided signature","sig":null,"attributes":[{"value":"/ Verify the prehashed message against the provided signature","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22094,"byte_end":22157,"line_start":110,"line_end":110,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22162,"byte_end":22165,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Accepts the following arguments:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22170,"byte_end":22206,"line_start":112,"line_end":112,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22211,"byte_end":22214,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ - `hashed_msg`: prehashed message to be verified","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22219,"byte_end":22271,"line_start":114,"line_end":114,"column_start":5,"column_end":57}},{"value":"/ - `signature`: signature to be verified against the key and message","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22276,"byte_end":22347,"line_start":115,"line_end":115,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":164},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23009,"byte_end":23024,"line_start":131,"line_end":131,"column_start":11,"column_end":26},"name":"DigestPrimitive","qualname":"::hazmat::DigestPrimitive","value":"DigestPrimitive: Curve","parent":null,"children":[{"krate":0,"index":165}],"decl_id":null,"docs":" Bind a preferred [`Digest`] algorithm to an elliptic curve type.","sig":null,"attributes":[{"value":"/ Bind a preferred [`Digest`] algorithm to an elliptic curve type.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22447,"byte_end":22515,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22516,"byte_end":22519,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ Generally there is a preferred variety of the SHA-2 family used with ECDSA","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22520,"byte_end":22598,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/ for a particular elliptic curve.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22599,"byte_end":22635,"line_start":122,"line_end":122,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22636,"byte_end":22639,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This trait can be used to specify it, and with it receive a blanket impl of","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22640,"byte_end":22719,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/ [`PrehashSignature`], used by [`signature_derive`][1]) for the [`Signature`]","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22720,"byte_end":22800,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/ type for a particular elliptic curve.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22801,"byte_end":22842,"line_start":126,"line_end":126,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22843,"byte_end":22846,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/RustCrypto/traits/tree/master/signature/derive","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22847,"byte_end":22921,"line_start":128,"line_end":128,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":22922,"byte_end":22948,"line_start":129,"line_end":129,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":165},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23185,"byte_end":23191,"line_start":134,"line_end":134,"column_start":10,"column_end":16},"name":"Digest","qualname":"::hazmat::DigestPrimitive::Digest","value":"type Digest: Digest;","parent":{"krate":0,"index":164},"children":[],"decl_id":null,"docs":" Preferred digest to use when computing ECDSA signatures for this\n elliptic curve. This should be a member of the SHA-2 family.\n","sig":null,"attributes":[{"value":"/ Preferred digest to use when computing ECDSA signatures for this","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23038,"byte_end":23106,"line_start":132,"line_end":132,"column_start":5,"column_end":73}},{"value":"/ elliptic curve. This should be a member of the SHA-2 family.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23111,"byte_end":23175,"line_start":133,"line_end":133,"column_start":5,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":166},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23657,"byte_end":23667,"line_start":147,"line_end":147,"column_start":11,"column_end":21},"name":"FromDigest","qualname":"::hazmat::FromDigest","value":"FromDigest<C: Curve>","parent":null,"children":[{"krate":0,"index":168}],"decl_id":null,"docs":" Instantiate this type from the output of a digest.","sig":null,"attributes":[{"value":"/ Instantiate this type from the output of a digest.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23204,"byte_end":23258,"line_start":137,"line_end":137,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23259,"byte_end":23262,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This trait is intended for use in ECDSA and should perform a conversion","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23263,"byte_end":23338,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/ which is compatible with the rules for calculating `h` from `H(M)` set out","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23339,"byte_end":23417,"line_start":140,"line_end":140,"column_start":1,"column_end":79}},{"value":"/ in RFC6979 section 2.4. This conversion cannot fail.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23418,"byte_end":23474,"line_start":141,"line_end":141,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23475,"byte_end":23478,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ This trait may also be useful for other hash-to-scalar or hash-to-curve","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23479,"byte_end":23554,"line_start":143,"line_end":143,"column_start":1,"column_end":76}},{"value":"/ use cases.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23555,"byte_end":23569,"line_start":144,"line_end":144,"column_start":1,"column_end":15}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23570,"byte_end":23596,"line_start":145,"line_end":145,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23744,"byte_end":23755,"line_start":149,"line_end":149,"column_start":8,"column_end":19},"name":"from_digest","qualname":"::hazmat::FromDigest::from_digest","value":"pub fn from_digest<D>(D) -> Self where D: Digest<OutputSize = FieldSize<C>>","parent":{"krate":0,"index":166},"children":[],"decl_id":null,"docs":" Instantiate this type from a [`Digest`] instance\n","sig":null,"attributes":[{"value":"/ Instantiate this type from a [`Digest`] instance","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23684,"byte_end":23736,"line_start":148,"line_end":148,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":173},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc6979","qualname":"::rfc6979","value":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":242}],"decl_id":null,"docs":" Support for computing deterministic ECDSA ephemeral scalar (`k`).","sig":null,"attributes":[{"value":"cfg(feature = \"sign\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":2591,"byte_end":2615,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/ Support for computing deterministic ECDSA ephemeral scalar (`k`).","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","byte_start":24033,"byte_end":24102,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","byte_start":24103,"byte_end":24106,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Implementation of the algorithm described in RFC 6979 (Section 3.2):","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","byte_start":24107,"byte_end":24179,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ <https://tools.ietf.org/html/rfc6979#section-3>","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","byte_start":24180,"byte_end":24231,"line_start":4,"line_end":4,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":235},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","byte_start":24697,"byte_end":24707,"line_start":20,"line_end":20,"column_start":8,"column_end":18},"name":"generate_k","qualname":"::rfc6979::generate_k","value":"pub fn generate_k<C, D>(&NonZeroScalar<C>, D, &[u8])\n-> Zeroizing<NonZeroScalar<C>> where C: Curve + ProjectiveArithmetic,\nD: FixedOutput<OutputSize = FieldSize<C>> + BlockInput + Clone + Default +\nReset + Update, Scalar<C>: FromDigest<C> + Invert<Output = Scalar<C>> +\nZeroize","parent":null,"children":[],"decl_id":null,"docs":" Generate ephemeral scalar `k` from the secret scalar and a digest of the\n input message.\n","sig":null,"attributes":[{"value":"/ Generate ephemeral scalar `k` from the secret scalar and a digest of the","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","byte_start":24594,"byte_end":24670,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ input message.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","byte_start":24671,"byte_end":24689,"line_start":19,"line_end":19,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":354},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":29547,"byte_end":29557,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"SigningKey","qualname":"::sign::SigningKey","value":"SigningKey {  }","parent":null,"children":[{"krate":0,"index":356}],"decl_id":null,"docs":" ECDSA signing key. Generic over elliptic curves.","sig":null,"attributes":[{"value":"/ ECDSA signing key. Generic over elliptic curves.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":29289,"byte_end":29341,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":29342,"byte_end":29345,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Requires an [`elliptic_curve::ProjectiveArithmetic`] impl on the curve, and a","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":29346,"byte_end":29427,"line_start":41,"line_end":41,"column_start":1,"column_end":82}},{"value":"/ [`SignPrimitive`] impl on its associated `Scalar` type.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":29428,"byte_end":29487,"line_start":42,"line_end":42,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":30030,"byte_end":30036,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"random","qualname":"<SigningKey<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\n              RngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a cryptographically random [`SigningKey`].\n","sig":null,"attributes":[{"value":"/ Generate a cryptographically random [`SigningKey`].","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":29963,"byte_end":30018,"line_start":59,"line_end":59,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":30245,"byte_end":30255,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SigningKey<C>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Initialize signing key from a raw scalar serialized as a byte slice.\n","sig":null,"attributes":[{"value":"/ Initialize signing key from a raw scalar serialized as a byte slice.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":30161,"byte_end":30233,"line_start":66,"line_end":66,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":30628,"byte_end":30641,"line_start":78,"line_end":78,"column_start":12,"column_end":25},"name":"verifying_key","qualname":"<SigningKey<C>>::verifying_key","value":"pub fn verifying_key(&Self) -> VerifyingKey<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]\n","sig":null,"attributes":[{"value":"/ Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":30462,"byte_end":30531,"line_start":75,"line_end":75,"column_start":5,"column_end":74}},{"value":"cfg(feature = \"verify\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":30536,"byte_end":30562,"line_start":76,"line_end":76,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":30831,"byte_end":30839,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<SigningKey<C>>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`SigningKey`] as bytes\n","sig":null,"attributes":[{"value":"/ Serialize this [`SigningKey`] as bytes","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":30777,"byte_end":30819,"line_start":84,"line_end":84,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":37857,"byte_end":37869,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"name":"VerifyingKey","qualname":"::verify::VerifyingKey","value":"VerifyingKey {  }","parent":null,"children":[{"krate":0,"index":655}],"decl_id":null,"docs":" ECDSA verification key (i.e. public key). Generic over elliptic curves.","sig":null,"attributes":[{"value":"/ ECDSA verification key (i.e. public key). Generic over elliptic curves.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":37543,"byte_end":37618,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":37619,"byte_end":37622,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Requires an [`elliptic_curve::ProjectiveArithmetic`] impl on the curve, and a","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":37623,"byte_end":37704,"line_start":30,"line_end":30,"column_start":1,"column_end":82}},{"value":"/ [`VerifyPrimitive`] impl on its associated `AffinePoint` type.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":37705,"byte_end":37771,"line_start":31,"line_end":31,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":38266,"byte_end":38281,"line_start":49,"line_end":49,"column_start":12,"column_end":27},"name":"from_sec1_bytes","qualname":"<VerifyingKey<C>>::from_sec1_bytes","value":"pub fn from_sec1_bytes(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from a SEC1-encoded public key.\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from a SEC1-encoded public key.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":38191,"byte_end":38254,"line_start":48,"line_end":48,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":38517,"byte_end":38535,"line_start":56,"line_end":56,"column_start":12,"column_end":30},"name":"from_encoded_point","qualname":"<VerifyingKey<C>>::from_encoded_point","value":"pub fn from_encoded_point(&EncodedPoint<C>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from an [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from an [`EncodedPoint`].","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":38448,"byte_end":38505,"line_start":55,"line_end":55,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":38866,"byte_end":38882,"line_start":64,"line_end":64,"column_start":12,"column_end":28},"name":"to_encoded_point","qualname":"<VerifyingKey<C>>::to_encoded_point","value":"pub fn to_encoded_point(&Self, bool) -> EncodedPoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`VerifyingKey`] as a SEC1 [`EncodedPoint`], optionally\n applying point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this [`VerifyingKey`] as a SEC1 [`EncodedPoint`], optionally","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":38744,"byte_end":38818,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ applying point compression.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":38823,"byte_end":38854,"line_start":63,"line_end":63,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":616},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":3645,"byte_end":3658,"line_start":109,"line_end":109,"column_start":10,"column_end":23},"name":"SignatureSize","qualname":"::SignatureSize","value":"<FieldSize<C> as Add>::Output","parent":null,"children":[],"decl_id":null,"docs":" Size of a fixed sized signature for the given elliptic curve.\n","sig":null,"attributes":[{"value":"/ Size of a fixed sized signature for the given elliptic curve.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":3570,"byte_end":3635,"line_start":108,"line_end":108,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":618},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":3761,"byte_end":3775,"line_start":112,"line_end":112,"column_start":10,"column_end":24},"name":"SignatureBytes","qualname":"::SignatureBytes","value":"GenericArray<u8, SignatureSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Fixed-size byte array containing an ECDSA signature\n","sig":null,"attributes":[{"value":"/ Fixed-size byte array containing an ECDSA signature","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":3696,"byte_end":3751,"line_start":111,"line_end":111,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":662},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4442,"byte_end":4451,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":664}],"decl_id":null,"docs":" ECDSA signature (fixed-size). Generic over elliptic curve types.","sig":null,"attributes":[{"value":"/ ECDSA signature (fixed-size). Generic over elliptic curve types.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":3818,"byte_end":3886,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":3887,"byte_end":3890,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Serialized as fixed-sized big endian scalar values with no added framing:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":3891,"byte_end":3968,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":3969,"byte_end":3972,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ - `r`: field element size for the given curve, big-endian","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":3973,"byte_end":4034,"line_start":118,"line_end":118,"column_start":1,"column_end":62}},{"value":"/ - `s`: field element size for the given curve, big-endian","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4035,"byte_end":4096,"line_start":119,"line_end":119,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4097,"byte_end":4100,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ For example, in a curve with a 256-bit modulus like NIST P-256 or","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4101,"byte_end":4170,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/ secp256k1, `r` and `s` will both be 32-bytes, resulting in a signature","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4171,"byte_end":4245,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ with a total of 64-bytes.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4246,"byte_end":4275,"line_start":123,"line_end":123,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4276,"byte_end":4279,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ASN.1 DER-encoded signatures also supported via the","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4280,"byte_end":4335,"line_start":125,"line_end":125,"column_start":1,"column_end":56}},{"value":"/ [`Signature::from_der`] and [`Signature::to_der`] methods.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4336,"byte_end":4398,"line_start":126,"line_end":126,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4750,"byte_end":4762,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"from_scalars","qualname":"<Signature<C>>::from_scalars","value":"pub fn from_scalars<impl Into<FieldBytes<C>>: Into<FieldBytes<C>>,\n                    impl Into<FieldBytes<C>>: Into<FieldBytes<C>>>(impl Into<FieldBytes<C>>,\n                                                                   impl Into<FieldBytes<C>>)\n-> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Signature`] from the serialized `r` and `s` scalar values\n which comprise the signature.\n","sig":null,"attributes":[{"value":"/ Create a [`Signature`] from the serialized `r` and `s` scalar values","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4628,"byte_end":4700,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ which comprise the signature.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4705,"byte_end":4738,"line_start":141,"line_end":141,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":5038,"byte_end":5046,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Signature<C>>::from_der","value":"pub fn from_der(&[u8]) -> Result<Self> where der::MaxSize<C>: ArrayLength<u8>,\n<FieldSize<C> as Add>::Output: Add<der::MaxOverhead> + ArrayLength<u8>","parent":null,"children":[],"decl_id":null,"docs":" Parse a signature from ASN.1 DER\n","sig":null,"attributes":[{"value":"/ Parse a signature from ASN.1 DER","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4911,"byte_end":4947,"line_start":146,"line_end":146,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"der\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4952,"byte_end":4975,"line_start":147,"line_end":147,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":5428,"byte_end":5434,"line_start":160,"line_end":160,"column_start":12,"column_end":18},"name":"to_der","qualname":"<Signature<C>>::to_der","value":"pub fn to_der(&Self) -> der::Signature<C> where\nder::MaxSize<C>: ArrayLength<u8>,\n<FieldSize<C> as Add>::Output: Add<der::MaxOverhead> + ArrayLength<u8>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this signature as ASN.1 DER\n","sig":null,"attributes":[{"value":"/ Serialize this signature as ASN.1 DER","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":5296,"byte_end":5337,"line_start":157,"line_end":157,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"der\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":5342,"byte_end":5365,"line_start":158,"line_end":158,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":5998,"byte_end":5999,"line_start":178,"line_end":178,"column_start":12,"column_end":13},"name":"r","qualname":"<Signature<C>>::r","value":"pub fn r(&Self) -> NonZeroScalar<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the `r` component of this signature\n","sig":null,"attributes":[{"value":"/ Get the `r` component of this signature","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":5943,"byte_end":5986,"line_start":177,"line_end":177,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":6315,"byte_end":6316,"line_start":185,"line_end":185,"column_start":12,"column_end":13},"name":"s","qualname":"<Signature<C>>::s","value":"pub fn s(&Self) -> NonZeroScalar<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the `s` component of this signature\n","sig":null,"attributes":[{"value":"/ Get the `s` component of this signature","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":6260,"byte_end":6303,"line_start":184,"line_end":184,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":6780,"byte_end":6791,"line_start":195,"line_end":195,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature<C>>::normalize_s","value":"pub fn normalize_s(&mut Self) -> Result<bool> where Scalar<C>: NormalizeLow","parent":null,"children":[],"decl_id":null,"docs":" Normalize signature into \"low S\" form as described in\n [BIP 0062: Dealing with Malleability][1].","sig":null,"attributes":[{"value":"/ Normalize signature into \"low S\" form as described in","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":6577,"byte_end":6634,"line_start":191,"line_end":191,"column_start":5,"column_end":62}},{"value":"/ [BIP 0062: Dealing with Malleability][1].","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":6639,"byte_end":6684,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":6689,"byte_end":6692,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":6697,"byte_end":6768,"line_start":194,"line_end":194,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":651},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":9083,"byte_end":9095,"line_start":292,"line_end":292,"column_start":11,"column_end":23},"name":"NormalizeLow","qualname":"::NormalizeLow","value":"NormalizeLow: Sized","parent":null,"children":[{"krate":0,"index":652}],"decl_id":null,"docs":" Normalize a scalar (i.e. ECDSA S) to the lower half the field, as described\n in [BIP 0062: Dealing with Malleability][1].","sig":null,"attributes":[{"value":"/ Normalize a scalar (i.e. ECDSA S) to the lower half the field, as described","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":8868,"byte_end":8947,"line_start":288,"line_end":288,"column_start":1,"column_end":80}},{"value":"/ in [BIP 0062: Dealing with Malleability][1].","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":8948,"byte_end":8996,"line_start":289,"line_end":289,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":8997,"byte_end":9000,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":9001,"byte_end":9072,"line_start":291,"line_end":291,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":9424,"byte_end":9437,"line_start":299,"line_end":299,"column_start":8,"column_end":21},"name":"normalize_low","qualname":"::NormalizeLow::normalize_low","value":"pub fn normalize_low(&Self) -> (Self, bool)","parent":{"krate":0,"index":651},"children":[],"decl_id":null,"docs":" Normalize scalar to the lower half of the field (i.e. negate it if it's\n larger than half the curve's order).\n Returns a tuple with the new scalar and a boolean indicating whether the given scalar\n was in the higher half.","sig":null,"attributes":[{"value":"/ Normalize scalar to the lower half of the field (i.e. negate it if it's","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":9109,"byte_end":9184,"line_start":293,"line_end":293,"column_start":5,"column_end":80}},{"value":"/ larger than half the curve's order).","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":9189,"byte_end":9229,"line_start":294,"line_end":294,"column_start":5,"column_end":45}},{"value":"/ Returns a tuple with the new scalar and a boolean indicating whether the given scalar","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":9234,"byte_end":9323,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/ was in the higher half.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":9328,"byte_end":9355,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":9360,"byte_end":9363,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ May be implemented to work in variable time.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":9368,"byte_end":9416,"line_start":298,"line_end":298,"column_start":5,"column_end":53}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":11146,"byte_end":11155,"line_start":62,"line_end":62,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":11485,"byte_end":11494,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":12861,"byte_end":12870,"line_start":118,"line_end":118,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":13088,"byte_end":13097,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":13460,"byte_end":13469,"line_start":143,"line_end":143,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":14472,"byte_end":14481,"line_start":178,"line_end":178,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":15611,"byte_end":15620,"line_start":208,"line_end":208,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":21230,"byte_end":21231,"line_start":82,"line_end":82,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23893,"byte_end":23902,"line_start":155,"line_end":155,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","byte_start":26085,"byte_end":26093,"line_start":61,"line_end":61,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":29773,"byte_end":29783,"line_start":53,"line_end":53,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":30921,"byte_end":30931,"line_start":90,"line_end":90,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":31202,"byte_end":31212,"line_start":101,"line_end":101,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":31509,"byte_end":31519,"line_start":112,"line_end":112,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":31873,"byte_end":31883,"line_start":125,"line_end":125,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":32665,"byte_end":32675,"line_start":142,"line_end":142,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":33101,"byte_end":33111,"line_start":154,"line_end":154,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":34060,"byte_end":34070,"line_start":178,"line_end":178,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":34540,"byte_end":34550,"line_start":190,"line_end":190,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":34876,"byte_end":34886,"line_start":203,"line_end":203,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":35236,"byte_end":35248,"line_start":217,"line_end":217,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":37965,"byte_end":37977,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":38999,"byte_end":39011,"line_start":69,"line_end":69,"column_start":18,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":39104,"byte_end":39116,"line_start":71,"line_end":71,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":39572,"byte_end":39584,"line_start":86,"line_end":86,"column_start":47,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":39996,"byte_end":40008,"line_start":99,"line_end":99,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":40402,"byte_end":40414,"line_start":111,"line_end":111,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":40606,"byte_end":40618,"line_start":120,"line_end":120,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":40804,"byte_end":40813,"line_start":129,"line_end":129,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":40996,"byte_end":41005,"line_start":138,"line_end":138,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":41178,"byte_end":41190,"line_start":147,"line_end":147,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":41425,"byte_end":41437,"line_start":156,"line_end":156,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":41756,"byte_end":41768,"line_start":168,"line_end":168,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":42110,"byte_end":42122,"line_start":180,"line_end":180,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":42451,"byte_end":42463,"line_start":192,"line_end":192,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4550,"byte_end":4559,"line_start":135,"line_end":135,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":5842,"byte_end":5851,"line_start":172,"line_end":172,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":7320,"byte_end":7329,"line_start":214,"line_end":214,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":7507,"byte_end":7516,"line_start":224,"line_end":224,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":7669,"byte_end":7678,"line_start":234,"line_end":234,"column_start":18,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":7824,"byte_end":7833,"line_start":242,"line_end":242,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":8134,"byte_end":8143,"line_start":257,"line_end":257,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":2406,"byte_end":2409,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":2582,"byte_end":2588,"line_start":68,"line_end":68,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":103}},{"kind":"Mod","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":2672,"byte_end":2679,"line_start":72,"line_end":72,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":173}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":11146,"byte_end":11155,"line_start":62,"line_end":62,"column_start":34,"column_end":43},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":66},"to":{"krate":37,"index":62}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":11485,"byte_end":11494,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":12861,"byte_end":12870,"line_start":118,"line_end":118,"column_start":25,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":66},"to":{"krate":1,"index":2913}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":13088,"byte_end":13097,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":66},"to":{"krate":1,"index":9396}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":13460,"byte_end":13469,"line_start":143,"line_end":143,"column_start":28,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":66},"to":{"krate":1,"index":2929}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":14472,"byte_end":14481,"line_start":178,"line_end":178,"column_start":42,"column_end":51},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":662},"to":{"krate":1,"index":2929}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/der.rs","byte_start":15611,"byte_end":15620,"line_start":208,"line_end":208,"column_start":41,"column_end":50},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":66},"to":{"krate":37,"index":65}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":21230,"byte_end":21231,"line_start":82,"line_end":82,"column_start":33,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":157},"to":{"krate":0,"index":147}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23026,"byte_end":23031,"line_start":131,"line_end":131,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":7,"index":200},"to":{"krate":0,"index":164}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/hazmat.rs","byte_start":23893,"byte_end":23902,"line_start":155,"line_end":155,"column_start":30,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":662},"to":{"krate":37,"index":65}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/rfc6979.rs","byte_start":26085,"byte_end":26093,"line_start":61,"line_end":61,"column_start":9,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":29773,"byte_end":29783,"line_start":53,"line_end":53,"column_start":9,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":30921,"byte_end":30931,"line_start":90,"line_end":90,"column_start":18,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":354},"to":{"krate":1,"index":3251}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":31202,"byte_end":31212,"line_start":101,"line_end":101,"column_start":32,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":354},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":31509,"byte_end":31519,"line_start":112,"line_end":112,"column_start":33,"column_end":43},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":354},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":31873,"byte_end":31883,"line_start":125,"line_end":125,"column_start":46,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":354},"to":{"krate":37,"index":89}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":32665,"byte_end":32675,"line_start":142,"line_end":142,"column_start":45,"column_end":55},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":354},"to":{"krate":37,"index":85}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":33101,"byte_end":33111,"line_start":154,"line_end":154,"column_start":56,"column_end":66},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":354},"to":{"krate":37,"index":100}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":34060,"byte_end":34070,"line_start":178,"line_end":178,"column_start":44,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":354},"to":{"krate":37,"index":94}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":34540,"byte_end":34550,"line_start":190,"line_end":190,"column_start":36,"column_end":46},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":354},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":34876,"byte_end":34886,"line_start":203,"line_end":203,"column_start":28,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":354},"to":{"krate":1,"index":2929}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/sign.rs","byte_start":35236,"byte_end":35248,"line_start":217,"line_end":217,"column_start":34,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":37965,"byte_end":37977,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":38999,"byte_end":39011,"line_start":69,"line_end":69,"column_start":18,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":3026}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":39104,"byte_end":39116,"line_start":71,"line_end":71,"column_start":48,"column_end":60},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":653},"to":{"krate":37,"index":121}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":39572,"byte_end":39584,"line_start":86,"line_end":86,"column_start":47,"column_end":59},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":653},"to":{"krate":37,"index":118}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":39996,"byte_end":40008,"line_start":99,"line_end":99,"column_start":36,"column_end":48},"kind":{"Impl":{"id":25}},"from":{"krate":7,"index":866},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":40402,"byte_end":40414,"line_start":111,"line_end":111,"column_start":32,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":40606,"byte_end":40618,"line_start":120,"line_end":120,"column_start":33,"column_end":45},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":40804,"byte_end":40813,"line_start":129,"line_end":129,"column_start":35,"column_end":44},"kind":{"Impl":{"id":28}},"from":{"krate":7,"index":991},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":40996,"byte_end":41005,"line_start":138,"line_end":138,"column_start":36,"column_end":45},"kind":{"Impl":{"id":29}},"from":{"krate":7,"index":991},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":41178,"byte_end":41190,"line_start":147,"line_end":147,"column_start":16,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":2672}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":41425,"byte_end":41437,"line_start":156,"line_end":156,"column_start":23,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":2667}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":41756,"byte_end":41768,"line_start":168,"line_end":168,"column_start":24,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":42110,"byte_end":42122,"line_start":180,"line_end":180,"column_start":17,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":2703}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/verify.rs","byte_start":42451,"byte_end":42463,"line_start":192,"line_end":192,"column_start":28,"column_end":40},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":2929}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":4550,"byte_end":4559,"line_start":135,"line_end":135,"column_start":9,"column_end":18},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":5842,"byte_end":5851,"line_start":172,"line_end":172,"column_start":9,"column_end":18},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":7320,"byte_end":7329,"line_start":214,"line_end":214,"column_start":34,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":662},"to":{"krate":37,"index":62}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":7507,"byte_end":7516,"line_start":224,"line_end":224,"column_start":25,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":662},"to":{"krate":1,"index":2913}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":7669,"byte_end":7678,"line_start":234,"line_end":234,"column_start":18,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":662},"to":{"krate":1,"index":3026}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":7824,"byte_end":7833,"line_start":242,"line_end":242,"column_start":19,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":662},"to":{"krate":1,"index":9396}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":8134,"byte_end":8143,"line_start":257,"line_end":257,"column_start":28,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":662},"to":{"krate":1,"index":2929}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.3/src/lib.rs","byte_start":9097,"byte_end":9102,"line_start":292,"line_end":292,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":3021},"to":{"krate":0,"index":651}}]}