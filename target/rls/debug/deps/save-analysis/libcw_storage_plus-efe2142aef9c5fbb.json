{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1","program":"/Users/pkayfire/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","cw_storage_plus","--edition=2018","/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","-C","metadata=efe2142aef9c5fbb","-C","extra-filename=-efe2142aef9c5fbb","--out-dir","/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps","-L","dependency=/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps","--extern","cosmwasm_std=/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps/libcosmwasm_std-d6b6266da212e988.rmeta","--extern","schemars=/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps/libschemars-1a025b861e525f4c.rmeta","--extern","serde=/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps/libserde-7870af872d9f9d58.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/pkayfire/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/pkayfire/Documents/Workspace/web3/cw-bundler/target/rls/debug/deps/libcw_storage_plus-efe2142aef9c5fbb.rmeta"},"prelude":{"crate_id":{"name":"cw_storage_plus","disambiguator":[14626804848389309963,0]},"crate_root":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src","external_crates":[{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","num":18,"id":{"name":"serde","disambiguator":[17708638508151849415,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","num":19,"id":{"name":"serde_derive","disambiguator":[14647995332264414458,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":20,"id":{"name":"cosmwasm_std","disambiguator":[15457222718874746160,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":21,"id":{"name":"schemars","disambiguator":[14179557541536586630,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":22,"id":{"name":"schemars_derive","disambiguator":[16831254357682522460,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":23,"id":{"name":"serde_json","disambiguator":[1862166777996081867,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":24,"id":{"name":"itoa","disambiguator":[5181687683467936091,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":25,"id":{"name":"ryu","disambiguator":[213915053124533740,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":26,"id":{"name":"dyn_clone","disambiguator":[274589602414854599,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":27,"id":{"name":"cosmwasm_crypto","disambiguator":[13846476669932949706,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":28,"id":{"name":"ed25519_zebra","disambiguator":[4006402121240301452,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":29,"id":{"name":"curve25519_dalek","disambiguator":[4180205231280758052,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":30,"id":{"name":"byteorder","disambiguator":[10503708031744184260,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":31,"id":{"name":"digest","disambiguator":[13392248641622206805,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":32,"id":{"name":"generic_array","disambiguator":[16961372954910198322,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":33,"id":{"name":"typenum","disambiguator":[14088201365392578911,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":34,"id":{"name":"rand_core","disambiguator":[5144361343438494181,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":35,"id":{"name":"getrandom","disambiguator":[1510426937030773120,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":36,"id":{"name":"cfg_if","disambiguator":[10518978035588998298,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":37,"id":{"name":"libc","disambiguator":[17030207778387568577,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":38,"id":{"name":"zeroize","disambiguator":[3482351252064373891,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":39,"id":{"name":"subtle","disambiguator":[10757624989791092535,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":40,"id":{"name":"sha2","disambiguator":[6449462383812243750,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":41,"id":{"name":"block_buffer","disambiguator":[9182225879530407599,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":42,"id":{"name":"opaque_debug","disambiguator":[2944049475489082046,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":43,"id":{"name":"cpufeatures","disambiguator":[864834193419649658,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":44,"id":{"name":"thiserror","disambiguator":[4886948207782880319,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":45,"id":{"name":"thiserror_impl","disambiguator":[2438396279667224800,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":46,"id":{"name":"hex","disambiguator":[9877719161220701246,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":47,"id":{"name":"k256","disambiguator":[1285814370869603051,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":48,"id":{"name":"elliptic_curve","disambiguator":[6301882710929557378,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":49,"id":{"name":"ff","disambiguator":[9872091952357329144,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":50,"id":{"name":"rand_core","disambiguator":[2650215389889784628,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":51,"id":{"name":"getrandom","disambiguator":[8068670600842606721,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":52,"id":{"name":"group","disambiguator":[17539616821181354708,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":53,"id":{"name":"pkcs8","disambiguator":[15941563477077830827,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":54,"id":{"name":"der","disambiguator":[99301483945602500,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":55,"id":{"name":"const_oid","disambiguator":[3290123240809815534,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":56,"id":{"name":"spki","disambiguator":[8760380263498343453,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":57,"id":{"name":"crypto_bigint","disambiguator":[16768623711449288056,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":58,"id":{"name":"ecdsa","disambiguator":[5993853775914812872,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":59,"id":{"name":"hmac","disambiguator":[17143649649459570764,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":60,"id":{"name":"crypto_mac","disambiguator":[1318832172094055950,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":61,"id":{"name":"signature","disambiguator":[12113705361577417028,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":62,"id":{"name":"cosmwasm_derive","disambiguator":[9808388350194834656,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":63,"id":{"name":"uint","disambiguator":[8534855115044549132,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":64,"id":{"name":"static_assertions","disambiguator":[17268501497301403732,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":65,"id":{"name":"crunchy","disambiguator":[15979734922084047031,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":66,"id":{"name":"base64","disambiguator":[15777400130402887194,0]}},{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/helpers.rs","num":67,"id":{"name":"serde_json_wasm","disambiguator":[5934842020498068409,0]}}],"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":0,"byte_end":921,"line_start":1,"line_end":35,"column_start":1,"column_end":35}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":214,"byte_end":220,"line_start":16,"line_end":16,"column_start":17,"column_end":23},"alias_span":null,"name":"Endian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":273,"byte_end":282,"line_start":18,"line_end":18,"column_start":23,"column_end":32},"alias_span":null,"name":"IndexList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":115},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":284,"byte_end":294,"line_start":18,"line_end":18,"column_start":34,"column_end":44},"alias_span":null,"name":"IndexedMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":199},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":352,"byte_end":370,"line_start":20,"line_end":20,"column_start":27,"column_end":45},"alias_span":null,"name":"IndexedSnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":424,"byte_end":436,"line_start":23,"line_end":23,"column_start":5,"column_end":17},"alias_span":null,"name":"index_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":306},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":438,"byte_end":456,"line_start":23,"line_end":23,"column_start":19,"column_end":37},"alias_span":null,"name":"index_string_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":305},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":458,"byte_end":470,"line_start":23,"line_end":23,"column_start":39,"column_end":51},"alias_span":null,"name":"index_triple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":304},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":472,"byte_end":483,"line_start":23,"line_end":23,"column_start":53,"column_end":64},"alias_span":null,"name":"index_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":307},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":485,"byte_end":490,"line_start":23,"line_end":23,"column_start":66,"column_end":71},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":492,"byte_end":502,"line_start":23,"line_end":23,"column_start":73,"column_end":83},"alias_span":null,"name":"MultiIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":504,"byte_end":515,"line_start":23,"line_end":23,"column_start":85,"column_end":96},"alias_span":null,"name":"UniqueIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":427},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":534,"byte_end":538,"line_start":25,"line_end":25,"column_start":15,"column_end":19},"alias_span":null,"name":"Item","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":597},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":555,"byte_end":562,"line_start":26,"line_end":26,"column_start":16,"column_end":23},"alias_span":null,"name":"I128Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":594},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":564,"byte_end":570,"line_start":26,"line_end":26,"column_start":25,"column_end":31},"alias_span":null,"name":"I16Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":572,"byte_end":578,"line_start":26,"line_end":26,"column_start":33,"column_end":39},"alias_span":null,"name":"I32Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":596},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":580,"byte_end":586,"line_start":26,"line_end":26,"column_start":41,"column_end":47},"alias_span":null,"name":"I64Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":593},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":588,"byte_end":593,"line_start":26,"line_end":26,"column_start":49,"column_end":54},"alias_span":null,"name":"I8Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":519},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":611,"byte_end":619,"line_start":27,"line_end":27,"column_start":16,"column_end":24},"alias_span":null,"name":"Prefixer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":483},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":621,"byte_end":631,"line_start":27,"line_end":27,"column_start":26,"column_end":36},"alias_span":null,"name":"PrimaryKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":592},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":633,"byte_end":640,"line_start":27,"line_end":27,"column_start":38,"column_end":45},"alias_span":null,"name":"U128Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":589},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":642,"byte_end":648,"line_start":27,"line_end":27,"column_start":47,"column_end":53},"alias_span":null,"name":"U16Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":590},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":650,"byte_end":656,"line_start":27,"line_end":27,"column_start":55,"column_end":61},"alias_span":null,"name":"U32Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":591},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":658,"byte_end":664,"line_start":27,"line_end":27,"column_start":63,"column_end":69},"alias_span":null,"name":"U64Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":588},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":666,"byte_end":671,"line_start":27,"line_end":27,"column_start":71,"column_end":76},"alias_span":null,"name":"U8Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1262},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":687,"byte_end":690,"line_start":28,"line_end":28,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1279},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":706,"byte_end":710,"line_start":29,"line_end":29,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":810},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":758,"byte_end":775,"line_start":31,"line_end":31,"column_start":18,"column_end":35},"alias_span":null,"name":"range_with_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1289},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":777,"byte_end":782,"line_start":31,"line_end":31,"column_start":37,"column_end":42},"alias_span":null,"name":"Bound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":784,"byte_end":790,"line_start":31,"line_end":31,"column_start":44,"column_end":50},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1326},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":811,"byte_end":819,"line_start":32,"line_end":32,"column_start":19,"column_end":27},"alias_span":null,"name":"Strategy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":903},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":844,"byte_end":856,"line_start":33,"line_end":33,"column_start":24,"column_end":36},"alias_span":null,"name":"SnapshotItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":909,"byte_end":920,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"alias_span":null,"name":"SnapshotMap","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","byte_start":0,"byte_end":921,"line_start":1,"line_end":35,"column_start":1,"column_end":35},"name":"","qualname":"::","value":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":15},{"krate":0,"index":69},{"krate":0,"index":152},{"krate":0,"index":245},{"krate":0,"index":388},{"krate":0,"index":448},{"krate":0,"index":470},{"krate":0,"index":610},{"krate":0,"index":691},{"krate":0,"index":742},{"krate":0,"index":817},{"krate":0,"index":876},{"krate":0,"index":927},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1111}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/endian.rs","byte_start":1383,"byte_end":1389,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"Endian","qualname":"::endian::Endian","value":"Endian: Sized + Copy","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/endian.rs","byte_start":1415,"byte_end":1418,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Buf","qualname":"::endian::Endian::Buf","value":"type Buf: AsRef<[u8]> + AsMut<[u8]> + Into<Vec<u8>> + Default;","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/endian.rs","byte_start":1481,"byte_end":1492,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"to_le_bytes","qualname":"::endian::Endian::to_le_bytes","value":"pub fn to_le_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/endian.rs","byte_start":1520,"byte_end":1531,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"to_be_bytes","qualname":"::endian::Endian::to_be_bytes","value":"pub fn to_be_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/endian.rs","byte_start":1560,"byte_end":1573,"line_start":18,"line_end":18,"column_start":8,"column_end":21},"name":"from_le_bytes","qualname":"::endian::Endian::from_le_bytes","value":"pub fn from_le_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/endian.rs","byte_start":1608,"byte_end":1621,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"from_be_bytes","qualname":"::endian::Endian::from_be_bytes","value":"pub fn from_be_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":112},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":9350,"byte_end":9359,"line_start":14,"line_end":14,"column_start":11,"column_end":20},"name":"IndexList","qualname":"::indexed_map::IndexList","value":"IndexList<T>","parent":null,"children":[{"krate":0,"index":114}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":9372,"byte_end":9383,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"get_indexes","qualname":"::indexed_map::IndexList::get_indexes","value":"pub fn get_indexes(&Self) -> Box<dyn Iterator<Item = &dyn Index<T>>>","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":115},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":9580,"byte_end":9590,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"IndexedMap","qualname":"::indexed_map::IndexedMap","value":"IndexedMap { idx }","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"decl_id":null,"docs":" IndexedBucket works like a bucket but has a secondary index\n TODO: remove traits here and make this const fn new\n","sig":null,"attributes":[{"value":"/ IndexedBucket works like a bucket but has a secondary index","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":9449,"byte_end":9512,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/ TODO: remove traits here and make this const fn new","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":9513,"byte_end":9568,"line_start":19,"line_end":19,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":122},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":9871,"byte_end":9874,"line_start":30,"line_end":30,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_map::IndexedMap::idx","value":"I","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":9761,"byte_end":9829,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":9834,"byte_end":9862,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":10092,"byte_end":10095,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedMap>::new","value":"pub fn new(&'a str, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" TODO: remove traits here and make this const fn new\n","sig":null,"attributes":[{"value":"/ TODO: remove traits here and make this const fn new","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":10025,"byte_end":10080,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":10312,"byte_end":10315,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":10793,"byte_end":10797,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":10522,"byte_end":10608,"line_start":59,"line_end":59,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":10613,"byte_end":10676,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":10681,"byte_end":10781,"line_start":61,"line_end":61,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":11008,"byte_end":11014,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":11461,"byte_end":11468,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":11202,"byte_end":11298,"line_start":72,"line_end":72,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":11303,"byte_end":11390,"line_start":73,"line_end":73,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":11395,"byte_end":11449,"line_start":74,"line_end":74,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":12458,"byte_end":12464,"line_start":104,"line_end":104,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":12180,"byte_end":12250,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":12255,"byte_end":12341,"line_start":101,"line_end":101,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":12346,"byte_end":12349,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":12354,"byte_end":12446,"line_start":103,"line_end":103,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":13099,"byte_end":13103,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":13004,"byte_end":13087,"line_start":119,"line_end":119,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":13359,"byte_end":13367,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":13207,"byte_end":13304,"line_start":124,"line_end":124,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":13309,"byte_end":13347,"line_start":125,"line_end":125,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":13525,"byte_end":13531,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":13677,"byte_end":13687,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":14180,"byte_end":14185,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":199},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":31840,"byte_end":31858,"line_start":14,"line_end":14,"column_start":12,"column_end":30},"name":"IndexedSnapshotMap","qualname":"::indexed_snapshot::IndexedSnapshotMap","value":"IndexedSnapshotMap { idx }","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"decl_id":null,"docs":" IndexedSnapshotMap works like a SnapshotMap but has a secondary index\n","sig":null,"attributes":[{"value":"/ IndexedSnapshotMap works like a SnapshotMap but has a secondary index","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":31755,"byte_end":31828,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":206},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":32052,"byte_end":32055,"line_start":19,"line_end":19,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_snapshot::IndexedSnapshotMap::idx","value":"I","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":31942,"byte_end":32010,"line_start":17,"line_end":17,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":32015,"byte_end":32043,"line_start":18,"line_end":18,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":32126,"byte_end":32129,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedSnapshotMap>::new","value":"pub fn new(&'a str, &'a str, &'a str, Strategy, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":32669,"byte_end":32683,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<IndexedSnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":32817,"byte_end":32834,"line_start":48,"line_end":48,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<IndexedSnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":32971,"byte_end":32989,"line_start":52,"line_end":52,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<IndexedSnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":33178,"byte_end":33197,"line_start":61,"line_end":61,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<IndexedSnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":33332,"byte_end":33335,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedSnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":33836,"byte_end":33840,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedSnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":33565,"byte_end":33651,"line_start":76,"line_end":76,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":33656,"byte_end":33719,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":33724,"byte_end":33824,"line_start":78,"line_end":78,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":34072,"byte_end":34078,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedSnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":34546,"byte_end":34553,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedSnapshotMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>, u64)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":34287,"byte_end":34383,"line_start":89,"line_end":89,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":34388,"byte_end":34475,"line_start":90,"line_end":90,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":34480,"byte_end":34534,"line_start":91,"line_end":91,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":35581,"byte_end":35587,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedSnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":35303,"byte_end":35373,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":35378,"byte_end":35464,"line_start":119,"line_end":119,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":35469,"byte_end":35472,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":35477,"byte_end":35569,"line_start":121,"line_end":121,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":36290,"byte_end":36294,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedSnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":36195,"byte_end":36278,"line_start":143,"line_end":143,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":36550,"byte_end":36558,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedSnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":36398,"byte_end":36495,"line_start":148,"line_end":148,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":36500,"byte_end":36538,"line_start":149,"line_end":149,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":36716,"byte_end":36722,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedSnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":36868,"byte_end":36878,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedSnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":37394,"byte_end":37399,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedSnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":303},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":53549,"byte_end":53561,"line_start":14,"line_end":14,"column_start":8,"column_end":20},"name":"index_string","qualname":"::indexes::index_string","value":"pub fn index_string(&str) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":304},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":53626,"byte_end":53637,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"index_tuple","qualname":"::indexes::index_tuple","value":"pub fn index_tuple(&str, u32) -> (Vec<u8>, U32Key)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":305},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":53736,"byte_end":53748,"line_start":22,"line_end":22,"column_start":8,"column_end":20},"name":"index_triple","qualname":"::indexes::index_triple","value":"pub fn index_triple(&str, u32, Vec<u8>) -> (Vec<u8>, U32Key, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":306},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":53873,"byte_end":53891,"line_start":26,"line_end":26,"column_start":8,"column_end":26},"name":"index_string_tuple","qualname":"::indexes::index_string_tuple","value":"pub fn index_string_tuple(&str, &str) -> (Vec<u8>, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":307},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54121,"byte_end":54126,"line_start":32,"line_end":32,"column_start":11,"column_end":16},"name":"Index","qualname":"::indexes::Index","value":"Index<T>","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54190,"byte_end":54194,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"save","qualname":"::indexes::Index::save","value":"pub fn save(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54273,"byte_end":54279,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"remove","qualname":"::indexes::Index::remove","value":"pub fn remove(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":55051,"byte_end":55061,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"MultiIndex","qualname":"::indexes::MultiIndex","value":"MultiIndex {  }","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"decl_id":null,"docs":" MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".\n Allows many values per index, and references pk.\n The associated primary key value is stored in the main (pk_namespace) map,\n which stores (namespace, pk_namespace, pk) -> value.","sig":null,"attributes":[{"value":"/ MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54358,"byte_end":54432,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ Allows many values per index, and references pk.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54433,"byte_end":54485,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/ The associated primary key value is stored in the main (pk_namespace) map,","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54486,"byte_end":54564,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ which stores (namespace, pk_namespace, pk) -> value.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54565,"byte_end":54621,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54622,"byte_end":54625,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The stored pk_len is used to recover the pk from the index namespace, and perform","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54626,"byte_end":54711,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/ the secondary load of the associated value from the main map.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54712,"byte_end":54777,"line_start":46,"line_end":46,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54778,"byte_end":54781,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The MultiIndex definition must include a field for the pk. That is, the MultiIndex K value","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54782,"byte_end":54876,"line_start":48,"line_end":48,"column_start":1,"column_end":95}},{"value":"/ is always a n-tuple (n >= 2) and its last element must be the pk.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54877,"byte_end":54946,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/ The index function must therefore put the pk as last element, when generating the index.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":54947,"byte_end":55039,"line_start":50,"line_end":50,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":55331,"byte_end":55334,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiIndex>::new","value":"pub fn new(fn(: &T, : Vec<u8>) -> K, &'a str, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":56919,"byte_end":56925,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"prefix","qualname":"<MultiIndex>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":57159,"byte_end":57169,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<MultiIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":57406,"byte_end":57415,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"index_key","qualname":"<MultiIndex>::index_key","value":"pub fn index_key(&Self, K) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":58505,"byte_end":58510,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"range","qualname":"<MultiIndex>::range","value":"pub fn range<'c>(&'c Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 Order) -> Box<dyn Iterator<Item = StdResult<Pair<T>>> + 'c>\nwhere T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":58840,"byte_end":58844,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"keys","qualname":"<MultiIndex>::keys","value":"pub fn keys<'c>(&'c Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":348},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":59478,"byte_end":59489,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"UniqueIndex","qualname":"::indexes::UniqueIndex","value":"UniqueIndex {  }","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354}],"decl_id":null,"docs":" UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}\n Allows one value per index (i.e. unique) and copies pk and data\n","sig":null,"attributes":[{"value":"/ UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":59325,"byte_end":59398,"line_start":208,"line_end":208,"column_start":1,"column_end":74}},{"value":"/ Allows one value per index (i.e. unique) and copies pk and data","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":59399,"byte_end":59466,"line_start":209,"line_end":209,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":59681,"byte_end":59684,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"new","qualname":"<UniqueIndex>::new","value":"pub fn new(fn(: &T) -> K, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":61123,"byte_end":61132,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"index_key","qualname":"<UniqueIndex>::index_key","value":"pub fn index_key(&Self, K) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":61200,"byte_end":61206,"line_start":270,"line_end":270,"column_start":12,"column_end":18},"name":"prefix","qualname":"<UniqueIndex>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":61407,"byte_end":61417,"line_start":276,"line_end":276,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<UniqueIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":61703,"byte_end":61707,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"item","qualname":"<UniqueIndex>::item","value":"pub fn item(&Self, &dyn Storage, K) -> StdResult<Option<Pair<T>>>","parent":null,"children":[],"decl_id":null,"docs":" returns all items that match this secondary index, always by pk Ascending\n","sig":null,"attributes":[{"value":"/ returns all items that match this secondary index, always by pk Ascending","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":61614,"byte_end":61691,"line_start":282,"line_end":282,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":62294,"byte_end":62299,"line_start":301,"line_end":301,"column_start":12,"column_end":17},"name":"range","qualname":"<UniqueIndex>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":62626,"byte_end":62630,"line_start":315,"line_end":315,"column_start":12,"column_end":16},"name":"keys","qualname":"<UniqueIndex>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":427},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":63327,"byte_end":63331,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Item","qualname":"::item::Item","value":"Item {  }","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"decl_id":null,"docs":" Item stores one typed item at the given key.\n This is an analog of Singleton.\n It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.\n","sig":null,"attributes":[{"value":"/ Item stores one typed item at the given key.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":63143,"byte_end":63191,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/ This is an analog of Singleton.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":63192,"byte_end":63227,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/ It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":63228,"byte_end":63315,"line_start":11,"line_end":11,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":63641,"byte_end":63644,"line_start":20,"line_end":20,"column_start":18,"column_end":21},"name":"new","qualname":"<Item>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":63931,"byte_end":63939,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Item>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":64091,"byte_end":64095,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"save","qualname":"<Item>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":63994,"byte_end":64079,"line_start":37,"line_end":37,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":64243,"byte_end":64249,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"remove","qualname":"<Item>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":64430,"byte_end":64434,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"load","qualname":"<Item>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":64335,"byte_end":64418,"line_start":47,"line_end":47,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":64728,"byte_end":64736,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Item>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns `Ok(None)` if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns `Ok(None)` if no data there.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":64574,"byte_end":64673,"line_start":53,"line_end":53,"column_start":5,"column_end":104}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":64678,"byte_end":64716,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":65190,"byte_end":65196,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"update","qualname":"<Item>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(T) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":64883,"byte_end":64953,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":64958,"byte_end":65044,"line_start":61,"line_end":61,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":65049,"byte_end":65052,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ It assumes, that data was initialized before, and if it doesn't exist, `Err(StdError::NotFound)`","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":65057,"byte_end":65157,"line_start":63,"line_end":63,"column_start":5,"column_end":105}},{"value":"/ is returned.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":65162,"byte_end":65178,"line_start":64,"line_end":64,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":65756,"byte_end":65761,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"query","qualname":"<Item>::query","value":"pub fn query(&Self, &QuerierWrapper, Addr) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" If you import the proper Item from the remote contract, this will let you read the data\n from a remote contract in a type-safe way using WasmQuery::RawQuery.","sig":null,"attributes":[{"value":"/ If you import the proper Item from the remote contract, this will let you read the data","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":65485,"byte_end":65576,"line_start":76,"line_end":76,"column_start":5,"column_end":96}},{"value":"/ from a remote contract in a type-safe way using WasmQuery::RawQuery.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":65581,"byte_end":65653,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":65658,"byte_end":65661,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that we expect an Item to be set, and error if there is no data there","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":65666,"byte_end":65744,"line_start":79,"line_end":79,"column_start":5,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":483},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":80188,"byte_end":80198,"line_start":8,"line_end":8,"column_start":11,"column_end":21},"name":"PrimaryKey","qualname":"::keys::PrimaryKey","value":"PrimaryKey<'a>: Clone","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":485},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":80221,"byte_end":80227,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Prefix","qualname":"::keys::PrimaryKey::Prefix","value":"type Prefix: Prefixer<'a>;","parent":{"krate":0,"index":483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":486},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":80252,"byte_end":80261,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"SubPrefix","qualname":"::keys::PrimaryKey::SubPrefix","value":"type SubPrefix: Prefixer<'a>;","parent":{"krate":0,"index":483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":80356,"byte_end":80359,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"key","qualname":"::keys::PrimaryKey::key","value":"pub fn key(&Self) -> Vec<&[u8]>","parent":{"krate":0,"index":483},"children":[],"decl_id":null,"docs":" returns a slice of key steps, which can be optionally combined\n","sig":null,"attributes":[{"value":"/ returns a slice of key steps, which can be optionally combined","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":80282,"byte_end":80348,"line_start":12,"line_end":12,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":80390,"byte_end":80400,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"joined_key","qualname":"::keys::PrimaryKey::joined_key","value":"pub fn joined_key(&Self) -> Vec<u8>","parent":{"krate":0,"index":483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":519},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":82000,"byte_end":82008,"line_start":81,"line_end":81,"column_start":11,"column_end":19},"name":"Prefixer","qualname":"::keys::Prefixer","value":"Prefixer<'a>","parent":null,"children":[{"krate":0,"index":521}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":82123,"byte_end":82129,"line_start":83,"line_end":83,"column_start":8,"column_end":14},"name":"prefix","qualname":"::keys::Prefixer::prefix","value":"pub fn prefix(&Self) -> Vec<&[u8]>","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" returns 0 or more namespaces that should length-prefixed and concatenated for range searches\n","sig":null,"attributes":[{"value":"/ returns 0 or more namespaces that should length-prefixed and concatenated for range searches","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":82019,"byte_end":82115,"line_start":82,"line_end":82,"column_start":5,"column_end":101}}]},{"kind":"Trait","id":{"krate":0,"index":542},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":83114,"byte_end":83125,"line_start":123,"line_end":123,"column_start":11,"column_end":22},"name":"EmptyPrefix","qualname":"::keys::EmptyPrefix","value":"EmptyPrefix","parent":null,"children":[{"krate":0,"index":543}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":83135,"byte_end":83138,"line_start":124,"line_end":124,"column_start":8,"column_end":11},"name":"new","qualname":"::keys::EmptyPrefix::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":588},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":84898,"byte_end":84903,"line_start":212,"line_end":212,"column_start":10,"column_end":15},"name":"U8Key","qualname":"::keys::U8Key","value":"IntKey<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":589},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":84927,"byte_end":84933,"line_start":213,"line_end":213,"column_start":10,"column_end":16},"name":"U16Key","qualname":"::keys::U16Key","value":"IntKey<u16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":590},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":84958,"byte_end":84964,"line_start":214,"line_end":214,"column_start":10,"column_end":16},"name":"U32Key","qualname":"::keys::U32Key","value":"IntKey<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":591},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":84989,"byte_end":84995,"line_start":215,"line_end":215,"column_start":10,"column_end":16},"name":"U64Key","qualname":"::keys::U64Key","value":"IntKey<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":592},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85020,"byte_end":85027,"line_start":216,"line_end":216,"column_start":10,"column_end":17},"name":"U128Key","qualname":"::keys::U128Key","value":"IntKey<u128>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":593},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85054,"byte_end":85059,"line_start":218,"line_end":218,"column_start":10,"column_end":15},"name":"I8Key","qualname":"::keys::I8Key","value":"IntKey<i8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":594},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85083,"byte_end":85089,"line_start":219,"line_end":219,"column_start":10,"column_end":16},"name":"I16Key","qualname":"::keys::I16Key","value":"IntKey<i16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":595},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85114,"byte_end":85120,"line_start":220,"line_end":220,"column_start":10,"column_end":16},"name":"I32Key","qualname":"::keys::I32Key","value":"IntKey<i32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":596},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85145,"byte_end":85151,"line_start":221,"line_end":221,"column_start":10,"column_end":16},"name":"I64Key","qualname":"::keys::I64Key","value":"IntKey<i64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":597},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85176,"byte_end":85183,"line_start":222,"line_end":222,"column_start":10,"column_end":17},"name":"I128Key","qualname":"::keys::I128Key","value":"IntKey<i128>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85533,"byte_end":85539,"line_start":231,"line_end":231,"column_start":12,"column_end":18},"name":"IntKey","qualname":"::keys::IntKey","value":"IntKey { wrapped, data }","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1244}],"decl_id":null,"docs":" It will cast one-particular int type into a Key via Vec<u8>, ensuring you don't mix up u32 and u64\n You can use new or the from/into pair to build a key from an int:","sig":null,"attributes":[{"value":"/ It will cast one-particular int type into a Key via Vec<u8>, ensuring you don't mix up u32 and u64","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85201,"byte_end":85303,"line_start":224,"line_end":224,"column_start":1,"column_end":103}},{"value":"/ You can use new or the from/into pair to build a key from an int:","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85304,"byte_end":85373,"line_start":225,"line_end":225,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85374,"byte_end":85377,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/   let k = U64Key::new(12345);","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85378,"byte_end":85411,"line_start":227,"line_end":227,"column_start":1,"column_end":34}},{"value":"/   let k = U32Key::from(12345);","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85412,"byte_end":85446,"line_start":228,"line_end":228,"column_start":1,"column_end":35}},{"value":"/   let k: U16Key = 12345.into();","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85447,"byte_end":85482,"line_start":229,"line_end":229,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85561,"byte_end":85568,"line_start":232,"line_end":232,"column_start":9,"column_end":16},"name":"wrapped","qualname":"::keys::IntKey::wrapped","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85587,"byte_end":85591,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"name":"data","qualname":"::keys::IntKey::data","value":"std::marker::PhantomData<T>","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85651,"byte_end":85654,"line_start":237,"line_end":237,"column_start":12,"column_end":15},"name":"new","qualname":"<IntKey<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1262},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":90309,"byte_end":90312,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":90580,"byte_end":90583,"line_start":23,"line_end":23,"column_start":18,"column_end":21},"name":"new","qualname":"<Map>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":90871,"byte_end":90874,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"key","qualname":"<Map>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":90996,"byte_end":91002,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Map>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":90956,"byte_end":90984,"line_start":41,"line_end":41,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":91139,"byte_end":91149,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<Map>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":91099,"byte_end":91127,"line_start":46,"line_end":46,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":91256,"byte_end":91260,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"save","qualname":"<Map>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":91384,"byte_end":91390,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":91571,"byte_end":91575,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"load","qualname":"<Map>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":91476,"byte_end":91559,"line_start":59,"line_end":59,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":91823,"byte_end":91831,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Map>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":91671,"byte_end":91768,"line_start":64,"line_end":64,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":91773,"byte_end":91811,"line_start":65,"line_end":65,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":92062,"byte_end":92065,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"has","qualname":"<Map>::has","value":"pub fn has(&Self, &dyn Storage, K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has returns true or false if any data is at this key, without parsing or interpreting the\n contents.\n","sig":null,"attributes":[{"value":"/ has returns true or false if any data is at this key, without parsing or interpreting the","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":91939,"byte_end":92032,"line_start":70,"line_end":70,"column_start":5,"column_end":98}},{"value":"/ contents.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":92037,"byte_end":92050,"line_start":71,"line_end":71,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":92430,"byte_end":92436,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"update","qualname":"<Map>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":92152,"byte_end":92222,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":92227,"byte_end":92313,"line_start":77,"line_end":77,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":92318,"byte_end":92321,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":92326,"byte_end":92418,"line_start":79,"line_end":79,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":92828,"byte_end":92833,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"query","qualname":"<Map>::query","value":"pub fn query(&Self, &QuerierWrapper, Addr, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" If you import the proper Map from the remote contract, this will let you read the data\n from a remote contract in a type-safe way using WasmQuery::RawQuery\n","sig":null,"attributes":[{"value":"/ If you import the proper Map from the remote contract, this will let you read the data","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":92650,"byte_end":92740,"line_start":88,"line_end":88,"column_start":5,"column_end":95}},{"value":"/ from a remote contract in a type-safe way using WasmQuery::RawQuery","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":92745,"byte_end":92816,"line_start":89,"line_end":89,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":93438,"byte_end":93443,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"range","qualname":"<Map>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":93798,"byte_end":93802,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>\nwhere T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":110383,"byte_end":110387,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":110916,"byte_end":110919,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Path<T>>::new","value":"pub fn new(&[u8], &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":111322,"byte_end":111326,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"save","qualname":"<Path<T>>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":111225,"byte_end":111310,"line_start":45,"line_end":45,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":111475,"byte_end":111481,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"remove","qualname":"<Path<T>>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":111663,"byte_end":111667,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"load","qualname":"<Path<T>>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":111568,"byte_end":111651,"line_start":55,"line_end":55,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":111960,"byte_end":111968,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Path<T>>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":111808,"byte_end":111905,"line_start":61,"line_end":61,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":111910,"byte_end":111948,"line_start":62,"line_end":62,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":112335,"byte_end":112338,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"has","qualname":"<Path<T>>::has","value":"pub fn has(&Self, &dyn Storage) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has returns true or false if any data is at this key, without parsing or interpreting the\n contents. It will returns true for an length-0 byte array (Some(b\"\")), if you somehow manage to set that.\n","sig":null,"attributes":[{"value":"/ has returns true or false if any data is at this key, without parsing or interpreting the","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":112116,"byte_end":112209,"line_start":68,"line_end":68,"column_start":5,"column_end":98}},{"value":"/ contents. It will returns true for an length-0 byte array (Some(b\"\")), if you somehow manage to set that.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":112214,"byte_end":112323,"line_start":69,"line_end":69,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":112713,"byte_end":112719,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"update","qualname":"<Path<T>>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":112435,"byte_end":112505,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":112510,"byte_end":112596,"line_start":75,"line_end":75,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":112601,"byte_end":112604,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":112609,"byte_end":112701,"line_start":77,"line_end":77,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":113715,"byte_end":113724,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::prefix::Bound::Inclusive","value":"Bound::Inclusive(Vec<u8>)","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":113739,"byte_end":113748,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::prefix::Bound::Exclusive","value":"Bound::Exclusive(Vec<u8>)","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":113703,"byte_end":113708,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Bound","qualname":"::prefix::Bound","value":"pub enum Bound { Inclusive(Vec<u8>), Exclusive(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1293}],"decl_id":null,"docs":" Bound is used to defines the two ends of a range, more explicit than Option<u8>\n None means that we don't limit that side of the range at all.\n Include means we use the given bytes as a limit and *include* anything at that exact key\n Exclude means we use the given bytes as a limit and *exclude* anything at that exact key\n","sig":null,"attributes":[{"value":"/ Bound is used to defines the two ends of a range, more explicit than Option<u8>","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":113334,"byte_end":113417,"line_start":13,"line_end":13,"column_start":1,"column_end":84}},{"value":"/ None means that we don't limit that side of the range at all.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":113418,"byte_end":113483,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ Include means we use the given bytes as a limit and *include* anything at that exact key","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":113484,"byte_end":113576,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ Exclude means we use the given bytes as a limit and *exclude* anything at that exact key","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":113577,"byte_end":113669,"line_start":16,"line_end":16,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":113868,"byte_end":113877,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"inclusive","qualname":"<Bound>::inclusive","value":"pub fn inclusive<T: Into<Vec<u8>>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns optional binary, like Option<CanonicalAddr> into an inclusive bound\n","sig":null,"attributes":[{"value":"/ Turns optional binary, like Option<CanonicalAddr> into an inclusive bound","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":113779,"byte_end":113856,"line_start":24,"line_end":24,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":114055,"byte_end":114064,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<Bound>::exclusive","value":"pub fn exclusive<T: Into<Vec<u8>>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns optional binary, like Option<CanonicalAddr> into an exclusive bound\n","sig":null,"attributes":[{"value":"/ Turns optional binary, like Option<CanonicalAddr> into an exclusive bound","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":113966,"byte_end":114043,"line_start":29,"line_end":29,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":114223,"byte_end":114236,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"inclusive_int","qualname":"<Bound>::inclusive_int","value":"pub fn inclusive_int<T: Endian>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns an int, like Option<u32> into an inclusive bound\n","sig":null,"attributes":[{"value":"/ Turns an int, like Option<u32> into an inclusive bound","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":114153,"byte_end":114211,"line_start":34,"line_end":34,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":114402,"byte_end":114415,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"exclusive_int","qualname":"<Bound>::exclusive_int","value":"pub fn exclusive_int<T: Endian>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns an int, like Option<u64> into an exclusive bound\n","sig":null,"attributes":[{"value":"/ Turns an int, like Option<u64> into an exclusive bound","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":114332,"byte_end":114390,"line_start":39,"line_end":39,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":114615,"byte_end":114621,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"Prefix","qualname":"::prefix::Prefix","value":"Prefix {  }","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":115200,"byte_end":115203,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Prefix<T>>::new","value":"pub fn new(&[u8], &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":115397,"byte_end":115426,"line_start":81,"line_end":81,"column_start":12,"column_end":41},"name":"with_deserialization_function","qualname":"<Prefix<T>>::with_deserialization_function","value":"pub fn with_deserialization_function(&[u8], &[&[u8]], &[u8], DeserializeFn<T>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":115883,"byte_end":115888,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"range","qualname":"<Prefix<T>>::range","value":"pub fn range<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<Pair<T>>> + 'a> where T: 'a","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":116372,"byte_end":116376,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"keys","qualname":"<Prefix<T>>::keys","value":"pub fn keys<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":810},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":116712,"byte_end":116729,"line_start":127,"line_end":127,"column_start":8,"column_end":25},"name":"range_with_prefix","qualname":"::prefix::range_with_prefix","value":"pub fn range_with_prefix<'a>(&'a dyn Storage, &[u8], Option<Bound>,\n                             Option<Bound>, Order)\n-> Box<dyn Iterator<Item = Pair> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot.rs","byte_start":128880,"byte_end":128890,"line_start":157,"line_end":157,"column_start":5,"column_end":15},"name":"EveryBlock","qualname":"::snapshot::Strategy::EveryBlock","value":"Strategy::EveryBlock","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot.rs","byte_start":128896,"byte_end":128901,"line_start":158,"line_end":158,"column_start":5,"column_end":10},"name":"Never","qualname":"::snapshot::Strategy::Never","value":"Strategy::Never","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot.rs","byte_start":129240,"byte_end":129248,"line_start":164,"line_end":164,"column_start":5,"column_end":13},"name":"Selected","qualname":"::snapshot::Strategy::Selected","value":"Strategy::Selected","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":" Only writes for linked blocks - does a few more reads to save some writes.\n Probably uses more gas, but less total disk usage.","sig":null,"attributes":[{"value":"/ Only writes for linked blocks - does a few more reads to save some writes.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot.rs","byte_start":128907,"byte_end":128985,"line_start":159,"line_end":159,"column_start":5,"column_end":83}},{"value":"/ Probably uses more gas, but less total disk usage.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot.rs","byte_start":128990,"byte_end":129044,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot.rs","byte_start":129049,"byte_end":129052,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that you need a trusted source (eg. own contract) to set/remove checkpoints.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot.rs","byte_start":129057,"byte_end":129142,"line_start":162,"line_end":162,"column_start":5,"column_end":90}},{"value":"/ Useful when the checkpoint setting happens in the same contract as the snapshotting.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot.rs","byte_start":129147,"byte_end":129235,"line_start":163,"line_end":163,"column_start":5,"column_end":93}}]},{"kind":"Enum","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot.rs","byte_start":128865,"byte_end":128873,"line_start":156,"line_end":156,"column_start":10,"column_end":18},"name":"Strategy","qualname":"::snapshot::Strategy","value":"pub enum Strategy { EveryBlock, Never, Selected, }","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1331}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":903},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":129764,"byte_end":129776,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"SnapshotItem","qualname":"::snapshot_item::SnapshotItem","value":"SnapshotItem {  }","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"decl_id":null,"docs":" Item that maintains a snapshot of one or more checkpoints.\n We can query historical data as well as current state.\n What data is snapshotted depends on the Strategy.\n","sig":null,"attributes":[{"value":"/ Item that maintains a snapshot of one or more checkpoints.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":129577,"byte_end":129639,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ We can query historical data as well as current state.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":129640,"byte_end":129698,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/ What data is snapshotted depends on the Strategy.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":129699,"byte_end":129752,"line_start":13,"line_end":13,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":129984,"byte_end":129987,"line_start":21,"line_end":21,"column_start":18,"column_end":21},"name":"new","qualname":"<SnapshotItem>::new","value":"pub const fn new(&'a str, &'a str, &'a str, Strategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Usage: SnapshotItem::new(snapshot_names!(\"foobar\"), Strategy::EveryBlock)\n","sig":null,"attributes":[{"value":"/ Usage: SnapshotItem::new(snapshot_names!(\"foobar\"), Strategy::EveryBlock)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":129889,"byte_end":129966,"line_start":20,"line_end":20,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":130289,"byte_end":130303,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<SnapshotItem>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":130439,"byte_end":130456,"line_start":37,"line_end":37,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<SnapshotItem>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":131161,"byte_end":131165,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"save","qualname":"<SnapshotItem>::save","value":"pub fn save(&Self, &mut dyn Storage, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":131413,"byte_end":131419,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"remove","qualname":"<SnapshotItem>::remove","value":"pub fn remove(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":131740,"byte_end":131744,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"load","qualname":"<SnapshotItem>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set, or on parse error","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":131662,"byte_end":131728,"line_start":72,"line_end":72,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":131976,"byte_end":131984,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"may_load","qualname":"<SnapshotItem>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored if present, returns Ok(None) if no data there.\n returns an error on parsing issues\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":131835,"byte_end":131921,"line_start":77,"line_end":77,"column_start":5,"column_end":91}},{"value":"/ returns an error on parsing issues","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":131926,"byte_end":131964,"line_start":78,"line_end":78,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":132094,"byte_end":132112,"line_start":83,"line_end":83,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<SnapshotItem>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":132522,"byte_end":132541,"line_start":95,"line_end":95,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<SnapshotItem>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":133067,"byte_end":133073,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"update","qualname":"<SnapshotItem>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result in the database.\n This is a shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result in the database.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":132671,"byte_end":132758,"line_start":99,"line_end":99,"column_start":5,"column_end":92}},{"value":"/ This is a shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":132763,"byte_end":132834,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":132839,"byte_end":132842,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":132847,"byte_end":132939,"line_start":102,"line_end":102,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":132944,"byte_end":132947,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This is a bit more customized than needed to only read \"old\" value 1 time, not 2 per naive approach","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":132952,"byte_end":133055,"line_start":104,"line_end":104,"column_start":5,"column_end":108}}]},{"kind":"Struct","id":{"krate":0,"index":973},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":138885,"byte_end":138896,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"SnapshotMap","qualname":"::snapshot_map::SnapshotMap","value":"SnapshotMap {  }","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978}],"decl_id":null,"docs":" Map that maintains a snapshots of one or more checkpoints.\n We can query historical data as well as current state.\n What data is snapshotted depends on the Strategy.\n","sig":null,"attributes":[{"value":"/ Map that maintains a snapshots of one or more checkpoints.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":138698,"byte_end":138760,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ We can query historical data as well as current state.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":138761,"byte_end":138819,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/ What data is snapshotted depends on the Strategy.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":138820,"byte_end":138873,"line_start":17,"line_end":17,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":139112,"byte_end":139115,"line_start":25,"line_end":25,"column_start":18,"column_end":21},"name":"new","qualname":"<SnapshotMap>::new","value":"pub const fn new(&'a str, &'a str, &'a str, Strategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Usage: SnapshotMap::new(snapshot_names!(\"foobar\"), Strategy::EveryBlock)\n","sig":null,"attributes":[{"value":"/ Usage: SnapshotMap::new(snapshot_names!(\"foobar\"), Strategy::EveryBlock)","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":139018,"byte_end":139094,"line_start":24,"line_end":24,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":139527,"byte_end":139541,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<SnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":139677,"byte_end":139694,"line_start":47,"line_end":47,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<SnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":139963,"byte_end":139966,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"key","qualname":"<SnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":140039,"byte_end":140045,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"prefix","qualname":"<SnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":140131,"byte_end":140141,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<SnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":140744,"byte_end":140748,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"save","qualname":"<SnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":141015,"byte_end":141021,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"remove","qualname":"<SnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":141378,"byte_end":141382,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"load","qualname":"<SnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":141283,"byte_end":141366,"line_start":95,"line_end":95,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":141634,"byte_end":141642,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"may_load","qualname":"<SnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":141482,"byte_end":141579,"line_start":100,"line_end":100,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":141584,"byte_end":141622,"line_start":101,"line_end":101,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":141761,"byte_end":141779,"line_start":106,"line_end":106,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<SnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":142186,"byte_end":142205,"line_start":124,"line_end":124,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<SnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":142729,"byte_end":142735,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"name":"update","qualname":"<SnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":142335,"byte_end":142405,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":142410,"byte_end":142496,"line_start":129,"line_end":129,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":142501,"byte_end":142504,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":142509,"byte_end":142601,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":142606,"byte_end":142609,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This is a bit more customized than needed to only read \"old\" value 1 time, not 2 per naive approach","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":142614,"byte_end":142717,"line_start":133,"line_end":133,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":143532,"byte_end":143537,"line_start":162,"line_end":162,"column_start":12,"column_end":17},"name":"range","qualname":"<SnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":10,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":9900,"byte_end":9910,"line_start":33,"line_end":33,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":10397,"byte_end":10407,"line_start":53,"line_end":53,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":13871,"byte_end":13881,"line_start":142,"line_end":142,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":32081,"byte_end":32099,"line_start":22,"line_end":22,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":32514,"byte_end":32532,"line_start":38,"line_end":38,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":33417,"byte_end":33435,"line_start":70,"line_end":70,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":37062,"byte_end":37080,"line_start":166,"line_end":166,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":55212,"byte_end":55222,"line_start":58,"line_end":58,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":56289,"byte_end":56299,"line_start":101,"line_end":101,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":56811,"byte_end":56821,"line_start":118,"line_end":118,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":58220,"byte_end":58230,"line_start":167,"line_end":167,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":59612,"byte_end":59623,"line_start":216,"line_end":216,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":59935,"byte_end":59946,"line_start":227,"line_end":227,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":61014,"byte_end":61025,"line_start":261,"line_end":261,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":62008,"byte_end":62019,"line_start":293,"line_end":293,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":63610,"byte_end":63614,"line_start":19,"line_end":19,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":63808,"byte_end":63812,"line_start":28,"line_end":28,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":83226,"byte_end":83229,"line_start":131,"line_end":131,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":83373,"byte_end":83376,"line_start":140,"line_end":140,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":83477,"byte_end":83483,"line_start":146,"line_end":146,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":83633,"byte_end":83639,"line_start":155,"line_end":155,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":84177,"byte_end":84181,"line_start":179,"line_end":179,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":84385,"byte_end":84389,"line_start":189,"line_end":189,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":84576,"byte_end":84582,"line_start":196,"line_end":196,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":84801,"byte_end":84807,"line_start":206,"line_end":206,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85628,"byte_end":85634,"line_start":236,"line_end":236,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85815,"byte_end":85821,"line_start":245,"line_end":245,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85925,"byte_end":85931,"line_start":251,"line_end":251,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":86142,"byte_end":86145,"line_start":261,"line_end":261,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":90547,"byte_end":90550,"line_start":22,"line_end":22,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":90778,"byte_end":90781,"line_start":32,"line_end":32,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":93314,"byte_end":93317,"line_start":108,"line_end":108,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":110700,"byte_end":110704,"line_start":20,"line_end":20,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":110852,"byte_end":110856,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":113767,"byte_end":113772,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":114977,"byte_end":114983,"line_start":60,"line_end":60,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":115134,"byte_end":115140,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot.rs","byte_start":124167,"byte_end":124175,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot.rs","byte_start":125192,"byte_end":125200,"line_start":53,"line_end":53,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":129863,"byte_end":129875,"line_start":19,"line_end":19,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":130598,"byte_end":130610,"line_start":42,"line_end":42,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":138990,"byte_end":139001,"line_start":23,"line_end":23,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":139403,"byte_end":139414,"line_start":38,"line_end":38,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":139839,"byte_end":139850,"line_start":52,"line_end":52,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":143231,"byte_end":143242,"line_start":154,"line_end":154,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/endian.rs","byte_start":1391,"byte_end":1396,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":7}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/endian.rs","byte_start":1399,"byte_end":1403,"line_start":12,"line_end":12,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3026},"to":{"krate":0,"index":7}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":9900,"byte_end":9910,"line_start":33,"line_end":33,"column_start":19,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":10397,"byte_end":10407,"line_start":53,"line_end":53,"column_start":19,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_map.rs","byte_start":13871,"byte_end":13881,"line_start":142,"line_end":142,"column_start":19,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":32081,"byte_end":32099,"line_start":22,"line_end":22,"column_start":19,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":32514,"byte_end":32532,"line_start":38,"line_end":38,"column_start":19,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":33417,"byte_end":33435,"line_start":70,"line_end":70,"column_start":19,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexed_snapshot.rs","byte_start":37062,"byte_end":37080,"line_start":166,"line_end":166,"column_start":19,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":55212,"byte_end":55222,"line_start":58,"line_end":58,"column_start":16,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":56289,"byte_end":56299,"line_start":101,"line_end":101,"column_start":29,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":311},"to":{"krate":0,"index":307}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":56811,"byte_end":56821,"line_start":118,"line_end":118,"column_start":16,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":58220,"byte_end":58230,"line_start":167,"line_end":167,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":59612,"byte_end":59623,"line_start":216,"line_end":216,"column_start":16,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":59935,"byte_end":59946,"line_start":227,"line_end":227,"column_start":29,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":348},"to":{"krate":0,"index":307}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":61014,"byte_end":61025,"line_start":261,"line_end":261,"column_start":16,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/indexes.rs","byte_start":62008,"byte_end":62019,"line_start":293,"line_end":293,"column_start":16,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":63610,"byte_end":63614,"line_start":19,"line_end":19,"column_start":13,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/item.rs","byte_start":63808,"byte_end":63812,"line_start":28,"line_end":28,"column_start":13,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":80204,"byte_end":80209,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2637},"to":{"krate":0,"index":483}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":83226,"byte_end":83229,"line_start":131,"line_end":131,"column_start":29,"column_end":32},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":483}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":83373,"byte_end":83376,"line_start":140,"line_end":140,"column_start":27,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":519}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":83477,"byte_end":83483,"line_start":146,"line_end":146,"column_start":29,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":483}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":83633,"byte_end":83639,"line_start":155,"line_end":155,"column_start":27,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":519}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":84177,"byte_end":84181,"line_start":179,"line_end":179,"column_start":29,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":20,"index":2594},"to":{"krate":0,"index":483}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":84385,"byte_end":84389,"line_start":189,"line_end":189,"column_start":27,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":20,"index":2594},"to":{"krate":0,"index":519}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":84576,"byte_end":84582,"line_start":196,"line_end":196,"column_start":48,"column_end":54},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1241},"to":{"krate":0,"index":483}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":84801,"byte_end":84807,"line_start":206,"line_end":206,"column_start":38,"column_end":44},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1241},"to":{"krate":0,"index":519}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85628,"byte_end":85634,"line_start":236,"line_end":236,"column_start":17,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85815,"byte_end":85821,"line_start":245,"line_end":245,"column_start":29,"column_end":35},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":85925,"byte_end":85931,"line_start":251,"line_end":251,"column_start":35,"column_end":41},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/keys.rs","byte_start":86142,"byte_end":86145,"line_start":261,"line_end":261,"column_start":37,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":7063},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":90547,"byte_end":90550,"line_start":22,"line_end":22,"column_start":16,"column_end":19},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":90778,"byte_end":90781,"line_start":32,"line_end":32,"column_start":16,"column_end":19},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/map.rs","byte_start":93314,"byte_end":93317,"line_start":108,"line_end":108,"column_start":16,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":110700,"byte_end":110704,"line_start":20,"line_end":20,"column_start":19,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1279},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/path.rs","byte_start":110852,"byte_end":110856,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":113767,"byte_end":113772,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":114977,"byte_end":114983,"line_start":60,"line_end":60,"column_start":19,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/prefix.rs","byte_start":115134,"byte_end":115140,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot.rs","byte_start":124167,"byte_end":124175,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot.rs","byte_start":125192,"byte_end":125200,"line_start":53,"line_end":53,"column_start":16,"column_end":24},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":129863,"byte_end":129875,"line_start":19,"line_end":19,"column_start":13,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_item.rs","byte_start":130598,"byte_end":130610,"line_start":42,"line_end":42,"column_start":13,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":138990,"byte_end":139001,"line_start":23,"line_end":23,"column_start":16,"column_end":27},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":139403,"byte_end":139414,"line_start":38,"line_end":38,"column_start":16,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":139839,"byte_end":139850,"line_start":52,"line_end":52,"column_start":16,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pkayfire/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.9.1/src/snapshot_map.rs","byte_start":143231,"byte_end":143242,"line_start":154,"line_end":154,"column_start":16,"column_end":27},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":973},"to":{"krate":4294967295,"index":4294967295}}]}